[{"C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\index.js":"1","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\App.js":"2","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\screens\\ReactDoc.js":"3","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\screens\\Questions.js":"4","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\screens\\Home.js":"5","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\screens\\About.js":"6","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Navbar\\NavBarElements.js":"7","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Styles\\Container\\Container.style.js":"8","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Styles\\Header\\Header.style.js":"9","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Login\\LoginPage.js":"10","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Styles\\Loginform\\Login.style.js":"11","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Navbar\\UserHeader.js":"12","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\screens\\Shop.js":"13","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Join\\JoinPage.js":"14","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Board\\Editor.js":"15","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Board\\DetailPage.js":"16","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Request\\RequestConfig.js":"17","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\NextEditor\\QuillEditor.tsx":"18","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Board\\ImageLibrary.js":"19","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Styles\\Editorform\\Editor.style.js":"20"},{"size":534,"mtime":1688292684594,"results":"21","hashOfConfig":"22"},{"size":1402,"mtime":1688293625935,"results":"23","hashOfConfig":"22"},{"size":142,"mtime":1687849415992,"results":"24","hashOfConfig":"22"},{"size":145,"mtime":1687849415992,"results":"25","hashOfConfig":"22"},{"size":442,"mtime":1687849415991,"results":"26","hashOfConfig":"22"},{"size":133,"mtime":1687849415990,"results":"27","hashOfConfig":"22"},{"size":1833,"mtime":1687849415983,"results":"28","hashOfConfig":"22"},{"size":178,"mtime":1687849415986,"results":"29","hashOfConfig":"22"},{"size":328,"mtime":1687849415987,"results":"30","hashOfConfig":"22"},{"size":2763,"mtime":1688030779570,"results":"31","hashOfConfig":"22"},{"size":249,"mtime":1687849415988,"results":"32","hashOfConfig":"22"},{"size":1913,"mtime":1687849415984,"results":"33","hashOfConfig":"22"},{"size":4713,"mtime":1688030779579,"results":"34","hashOfConfig":"22"},{"size":4538,"mtime":1688030871573,"results":"35","hashOfConfig":"22"},{"size":10815,"mtime":1688315140407,"results":"36","hashOfConfig":"22"},{"size":3051,"mtime":1688030922491,"results":"37","hashOfConfig":"22"},{"size":247,"mtime":1688134981653,"results":"38","hashOfConfig":"22"},{"size":3819,"mtime":1688292728969,"results":"39","hashOfConfig":"22"},{"size":2016,"mtime":1688317674346,"results":"40","hashOfConfig":"22"},{"size":151,"mtime":1688301566451,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"4b0tnn",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"45"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"45"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\index.js",[],[],[],"C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\App.js",["114"],[],"import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport LoginPage from './components/Login/LoginPage';\r\nimport JoinPage from './components/Join/JoinPage';\r\nimport Home from \"./screens/Home\"\r\nimport About from \"./screens/About\"\r\nimport Shop from \"./screens/Shop\";\r\nimport Questions from \"./screens/Questions\";\r\nimport ReactDoc from \"./screens/ReactDoc\";\r\nimport NavBarElements from \"./components/Navbar/NavBarElements\";\r\nimport DetailPage from \"./components/Board/DetailPage\";\r\nimport Editor from \"./components/Board/Editor\";\r\nimport QuillEditor from \"./components/NextEditor/QuillEditor\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <NavBarElements/>\r\n            <Routes>\r\n                <Route path=\"/login\" element={<LoginPage />} />\r\n                <Route path=\"/\" element={<Home /> } />\r\n                <Route path=\"/about\" element={<About/> } />\r\n                <Route path=\"/shop\" element={<Shop/> } />\r\n                <Route path=\"/questions\" element={<Questions/> } />\r\n                <Route path=\"/reactDoc\" element={<ReactDoc/> } />\r\n                <Route path=\"/join\" element={<JoinPage />} />\r\n                <Route path=\"/detail/:id\" element={<DetailPage />} />\r\n                <Route path=\"/editor\" element={<Editor/>}/>\r\n            </Routes>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\screens\\ReactDoc.js",[],[],"C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\screens\\Questions.js",[],[],"C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\screens\\Home.js",[],[],"C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\screens\\About.js",[],[],"C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Navbar\\NavBarElements.js",[],[],"C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Styles\\Container\\Container.style.js",["115"],[],"import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n`\r\n","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Styles\\Header\\Header.style.js",["116"],[],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Header = styled.section`\r\n    width: 100%;\r\n    height: 80vh;\r\n    background-color: #282c34;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nexport const MainHeader = styled.div`\r\n    position: relative;    \r\n`","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Login\\LoginPage.js",["117","118","119"],[],"import React, { useState } from 'react';\r\nimport {Login} from \"../Styles/Loginform/Login.style\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from '../Request/RequestConfig.js';\r\n\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginError, setLoginError] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            const response = await axios.post('/login', JSON.stringify({ email, password }), {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (response.status == 200) {\r\n                // 로그인 성공 시 처리할 작업\r\n                const accessToken = response.headers.get('access-token');\r\n                const refreshToken = response.headers.get('refresh-token');\r\n\r\n                console.log(accessToken);\r\n\r\n                const data = await response.data;\r\n                console.log(JSON.stringify(data)); // JSON 형태로 String형태로 출력\r\n                console.log(data.data.username);\r\n\r\n\r\n\r\n                // 로그인 정보 저장\r\n                sessionStorage.setItem('userData', JSON.stringify(data.data));\r\n\r\n                // 액세스 토큰과 리프레시 토큰을 localStorage에 저장\r\n                localStorage.setItem('accessToken', accessToken);\r\n                localStorage.setItem('refreshToken', refreshToken);\r\n\r\n                //gamja@gmail.com\r\n                navigate('/shop');\r\n\r\n            } else {\r\n                // 로그인 실패 시 처리할 작업\r\n                setLoginError('로그인에 실패했습니다. 다시 시도해주세요.');\r\n            }\r\n        } catch (error) {\r\n            console.error('로그인 요청 중 오류가 발생했습니다.', error);\r\n            setLoginError('로그인 요청 중 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    const handleJoin = () => {\r\n        navigate('/join')\r\n    }\r\n\r\n\r\n    return (\r\n        <Login>\r\n            <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={handleLogin}>로그인</button>\r\n            <button onClick={handleJoin}>회원가입</button>\r\n        </Login>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Styles\\Loginform\\Login.style.js",["120"],[],"import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nexport const Login = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Navbar\\UserHeader.js",["121"],[],"import React, {useState, useEffect } from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {useNavigate, useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst UserHeader = () => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [userName, setUserName] = useState('');\r\n    const userDataString = sessionStorage.getItem('userData');\r\n    const userData = userDataString ? JSON.parse(userDataString) : null;\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n\r\n    // 로그인 상태 변경 함수\r\n    const handleLogin = () => {\r\n        navigate('/login');\r\n    };\r\n\r\n    // 로그아웃 상태 변경 함수\r\n    const handleLogout = () => {\r\n        setIsLoggedIn(false);\r\n        setUserName('');\r\n        sessionStorage.removeItem('userData');\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userData) {\r\n            setIsLoggedIn(true);\r\n            setUserName(userData.username);\r\n\r\n        }\r\n    }, [userData]);\r\n\r\n\r\n\r\n\r\n\r\n    return (<header>\r\n        {isLoggedIn ? (<Card style={{width: '300px', height: '100px'}}>\r\n            <Card.Header style={{fontSize: '16px', padding: '2px'}}>회원</Card.Header>\r\n            <Card.Body style={{fontSize: '14px', padding: '2px'}}>\r\n                <Card.Title style={{fontSize: '18px', marginBottom: '8px'}}>안녕하세요, { userName }님 </Card.Title>\r\n                <Button variant=\"primary\" size=\"sm\" onClick={handleLogout}> 로그아웃 </Button>\r\n                <Button variant=\"primary\" size=\"sm\" style={{marginLeft: '30px'}}> 회원 정보 수정 </Button>\r\n            </Card.Body>\r\n        </Card>) : (<Card>\r\n            <Button onClick={handleLogin}>로그인</Button>\r\n        </Card>)}\r\n    </header>);\r\n};\r\n\r\nexport default UserHeader;\r\n","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\screens\\Shop.js",["122","123","124","125"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Container } from \"../components/Styles/Container/Container.style\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Image from 'react-bootstrap/Image';\r\nimport axios from '../components/Request/RequestConfig.js';\r\n\r\n\r\n\r\nconst Shop = () => {\r\n    const [loginError, setLoginError] = useState('');\r\n    const [boardPG, setBoardPG] = useState({ content: [] });\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        handlePage();\r\n    }, [currentPage]);\r\n\r\n    const handlePage = async () => {\r\n        try {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n            if (accessToken && refreshToken) {\r\n                const response = await axios.get(`/auth/shop?page=${currentPage - 1}`, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${accessToken}`,\r\n                        'RefreshToken': `Bearer ${refreshToken}`,\r\n                    },\r\n                });\r\n\r\n                if (response.status == 200) {\r\n                    const data = await response.data;\r\n                    setBoardPG(data.data);\r\n                } else {\r\n                    setLoginError('인증된 유저만 접근 가능합니다.');\r\n                }\r\n            } else {\r\n                setLoginError('로그인이 필요합니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\r\n            setLoginError('인증된 유저만 접근 가능합니다.');\r\n        }\r\n    };\r\n\r\n    const handlePosting = () => {\r\n        navigate('/editor');\r\n    }\r\n\r\n    const handleNextPage = () => {\r\n        setCurrentPage((currentPage) => currentPage + 1);\r\n    }\r\n\r\n    const handleBackPage = () => {\r\n        setCurrentPage((currentPage) => currentPage - 1);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <header>\r\n                <h1> ShopPage </h1>\r\n            </header>\r\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <form action=\"/\" method=\"get\">\r\n                    <input type=\"text\" placeholder=\"Search\" name=\"keyword\" />\r\n                    <button style={{ marginLeft: '0.5em' }}>Search</button>\r\n                </form>\r\n            </div>\r\n            <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '0.5em' }}>\r\n                <form action=\"/\" method=\"get\">\r\n                    <button onClick={handlePosting} style={{ marginLeft: '0.5em' }}>글작성</button>\r\n                </form>\r\n            </div>\r\n\r\n            <ListGroup as=\"ol\" numbered={true}>\r\n\r\n                {boardPG.content.map((board) => (\r\n                    <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\" key={board.id}>\r\n                        <div className=\"ms-2 me-auto\">\r\n                            <h4 className=\"fw-bold\">{board.title}</h4>\r\n                            <a href={`/detail/${board.id}`}>상세보기</a>\r\n                        </div>\r\n                        <div>\r\n                            <div>작성자 : {board.user.username}</div>\r\n                        </div>\r\n                        <hr />\r\n                        {console.log(board.thumbnail)}\r\n                        <Image src={board.thumbnail} style={{ height: \"100px\" }} fluid />\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n\r\n            <div>현재 페이지: {currentPage}</div>\r\n\r\n            <Pagination>\r\n                <Pagination.First onClick={() => setCurrentPage(1)} />\r\n                <Pagination.Prev onClick={handleBackPage} disabled={currentPage === 1} />\r\n                {Array.from({ length: boardPG.totalPages }, (_, index) => (\r\n                    <Pagination.Item\r\n                        key={index + 1}\r\n                        active={index + 1 === currentPage}\r\n                        onClick={() => setCurrentPage(index + 1)}\r\n                    >\r\n                        {index + 1}\r\n                    </Pagination.Item>\r\n                ))}\r\n                <Pagination.Next onClick={handleNextPage} disabled={boardPG.last} />\r\n                <Pagination.Last onClick={() => setCurrentPage(boardPG.totalPages)} />\r\n            </Pagination>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Shop;\r\n","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Join\\JoinPage.js",["126"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from '../Request/RequestConfig.js';\r\n\r\nconst JoinPage = () => {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [birth, setBirth] = useState('');\r\n    const [passwordMismatch, setPasswordMismatch] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        // 비밀번호 일치 여부 확인\r\n        setPasswordMismatch(password !== confirmPassword);\r\n    }, [password, confirmPassword]);\r\n\r\n    const handleJoin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // 이메일 형식 확인\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailRegex.test(email)) {\r\n            // 이메일 형식이 올바르지 않음\r\n            return;\r\n        }\r\n\r\n        // 비밀번호 일치 여부 확인\r\n        if (password !== confirmPassword) {\r\n            // 비밀번호 불일치\r\n            return;\r\n        }\r\n\r\n        // 이름이 한글인지 확인\r\n        const nameRegex = /^[가-힣]+$/;\r\n        if (!nameRegex.test(username)) {\r\n            // 이름이 한글이 아님\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('/join', JSON.stringify({ email, password, username, birth }),{\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (response.status == 200) {\r\n                navigate('/login');\r\n            } else {\r\n                // 실패 처리 로직\r\n            }\r\n        } catch (error) {\r\n            // 오류 처리 로직\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>회원가입</h1>\r\n            <Form onSubmit={handleJoin}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email 주소</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>비밀번호</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicConfirmPassword\">\r\n                    <Form.Label>비밀번호 확인</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                    {passwordMismatch && (\r\n                        <Alert variant=\"danger\">\r\n                            비밀번호와 확인 비밀번호가 일치하지 않습니다.\r\n                        </Alert>\r\n                    )}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicName\">\r\n                    <Form.Label>이름</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"이름\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicBirth\">\r\n                    <Form.Label>생년월일</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        placeholder=\"생년월일\"\r\n                        value={birth}\r\n                        onChange={(e) => setBirth(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    회원가입\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JoinPage;\r\n","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Board\\Editor.js",["127","128","129","130","131","132","133","134","135"],[],"import React, {useState, useEffect} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {useRef, useMemo} from 'react';\r\nimport axios from '../Request/RequestConfig.js';\r\nimport AWS from 'aws-sdk';\r\nimport ImageLibrary from \"./ImageLibrary\";\r\n\r\n\r\nexport default function Editor() {\r\n    const quillRef = useRef(null);\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [thumbnail, setThumbnail] = useState('');\r\n    const [thumbnails, setThumbnails] = useState('');\r\n    const [loginError, setLoginError] = useState('');\r\n    const [imageSrc, setImageSrc] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n\r\n    // 이미지 추가\r\n    const imageHandler = () => {\r\n        const input = document.createElement('input');\r\n        input.setAttribute('type', 'file');\r\n        input.setAttribute('accept', 'image/*');\r\n        input.click();\r\n\r\n        input.addEventListener('change', async () => {\r\n\r\n            const ACCESS_KEY = 'AKIAUM5SAFCTKG4Z2PGC';\r\n            const SECRET_ACCESS_KEY = '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';\r\n            const REGION = \"ap-northeast-2\";\r\n            const S3_BUCKET = 'image-gamja';\r\n\r\n            const file = input.files[0];\r\n            const fileName = file.name;\r\n\r\n            // AWS ACCESS KEY를 세팅합니다.\r\n            AWS.config.update({\r\n                accessKeyId: ACCESS_KEY,\r\n                secretAccessKey: SECRET_ACCESS_KEY\r\n            });\r\n\r\n            // 버킷에 맞는 이름과 리전을 설정합니다.\r\n            const ReactS3Client = new AWS.S3({\r\n                params: {Bucket: S3_BUCKET},\r\n                region: REGION,\r\n            });\r\n\r\n            // 파일과 파일이름을 넘겨주면 됩니다.\r\n            const params = {\r\n                ACL: 'public-read',\r\n                Body: file,\r\n                Bucket: S3_BUCKET,\r\n                Key: file.name\r\n            };\r\n\r\n            ReactS3Client.putObject(params)\r\n                .on('httpUploadProgress', (evt) => {\r\n                    alert(\"SUCCESS\")\r\n                })\r\n                .send((err, data) => {\r\n                    if (err) {\r\n                        console.error('업로드 오류:', err);\r\n                        alert('error');\r\n                    } else {\r\n\r\n                        const {Bucket, Key} = params; // params 객체에서 Bucket과 Key를 추출합니다.\r\n                        const imageUrl = `https://${Bucket}.s3.amazonaws.com/${Key}`; // 이미지의 위치(URL)을 구성합니다.\r\n                        console.log('업로드 완료. 이미지 위치:', imageUrl);\r\n\r\n                        setImageSrc(`${imageUrl}`);\r\n\r\n\r\n                        // 여기서 Quill 편집기 폼에 이미지를 출력하는 로직을 실행할 수 있습니다.\r\n                        const editor = quillRef.current.getEditor();\r\n                        //커서 위치 받아오기 위함.\r\n                        const range = editor.getSelection(true);\r\n                        editor.insertEmbed(\r\n                            range.index,\r\n                            'image',\r\n                            `${imageUrl}`,\r\n                        );\r\n\r\n                        // 이미지 업로드 후 커서 이미지 한칸 옆으로 이동.\r\n                        editor.setSelection(range.index + 1);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    // 이미지 삭제 로직\r\n    const deleteImage = (imageIdentifier) => {\r\n        const editor = quillRef.current.getEditor();\r\n        const contents = editor.getContents();\r\n\r\n        // Quill 컨텐츠의 각 블록을 순회하면서 이미지를 찾고, 식별자와 일치하는 이미지를 삭제\r\n        contents.ops.forEach((block) => {\r\n            if (block.insert && block.insert.image) {\r\n                const imageUrl = block.insert.image;\r\n                if (imageUrl === imageIdentifier) {\r\n                    // 이미지 삭제\r\n                    editor.deleteText(contents.ops.indexOf(block), 1);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const modules = useMemo(\r\n        () => ({\r\n            toolbar: {\r\n                container: [\r\n                    [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n                    [{'font': []}],\r\n                    [{'align': []}],\r\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                    [{'list': 'ordered'}, {'list': 'bullet'}, 'link'],\r\n                    [{'color': ['#000000', '#e60000', '#ff9900', '#ffff00', '#008a00', '#0066cc', '#9933ff', '#ffffff', '#facccc', '#ffebcc', '#ffffcc', '#cce8cc', '#cce0f5', '#ebd6ff', '#bbbbbb', '#f06666', '#ffc266', '#ffff66', '#66b966', '#66a3e0', '#c285ff', '#888888', '#a10000', '#b26b00', '#b2b200', '#006100', '#0047b2', '#6b24b2', '#444444', '#5c0000', '#663d00', '#666600', '#003700', '#002966', '#3d1466', 'custom-color']}, {'background': []}],\r\n                    ['image', 'video'],\r\n                    ['clean'],\r\n                    [{'custom-button': '<i class=\"fas fa-bold\"></i>'}]\r\n                ],\r\n                handlers: {image: imageHandler},\r\n            },\r\n            clipboard: {\r\n                matchVisual: false,\r\n            },\r\n        }),\r\n        [],\r\n    );\r\n\r\n    const formats = [\r\n        'header',\r\n        'font',\r\n        'size',\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        'blockquote',\r\n        'list',\r\n        'bullet',\r\n        'align',\r\n        'image',\r\n        'div'\r\n    ];\r\n\r\n    const handleCustomButtonClick = () => {\r\n        // 버튼 클릭 시 동작할 로직을 작성합니다\r\n        console.log('Custom button clicked');\r\n\r\n    };\r\n\r\n    const onChangeTitle = (event) => {\r\n        const newTitle = event.target.value;\r\n        if (newTitle.length <= 60) {\r\n            setTitle(newTitle);\r\n        } else {\r\n            // 팝업을 띄우는 로직을 추가하거나 원하는 작업을 수행합니다.\r\n            // 예시: alert을 사용하여 팝업을 띄움\r\n            alert('제목은 60자 이하여야 합니다.');\r\n        }\r\n    };\r\n\r\n    const onChangeContent = (content) => {\r\n        setContent(content);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n            console.log(accessToken);\r\n            console.log(refreshToken);\r\n\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                    RefreshToken: `Bearer ${refreshToken}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            };\r\n            const requestData = {title, content};\r\n\r\n            if (thumbnails !== \"\") {\r\n                requestData.thumbnail = thumbnail;\r\n            }\r\n\r\n            if (accessToken && refreshToken) {\r\n                // 요청 보내기\r\n                console.log(requestData);\r\n                const response = await axios.post('/manager/shop/save', JSON.stringify(requestData), {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${accessToken}`,\r\n                        'RefreshToken': `Bearer ${refreshToken}`,\r\n                    },\r\n                });\r\n\r\n                if (response.status == 200) {\r\n                    // 응답 성공 시 처리할 작업\r\n                    const data = await response.data;\r\n                    console.log(data); // 요청에 대한 응답 처리\r\n                    navigate('/shop');\r\n\r\n                } else {\r\n                    // 응답 실패 시 처리할 작업\r\n                    const errorMessages = await response.data;\r\n                    console.log(errorMessages.errors);\r\n                    const errors = errorMessages.errors;\r\n                    for (const error of errors) {\r\n                        console.log(error.defaultMessage);\r\n                        alert(error.defaultMessage);\r\n                    }\r\n                }\r\n            } else {\r\n                setLoginError('인증 권한을 가진 유저만 접근 가능합니다.'); // 로그인되지 않은 경우 처리\r\n            }\r\n        } catch (error) {\r\n            console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\r\n            setLoginError('인증된 유저만 접근 가능합니다.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column', height: '100vh'}}>\r\n            <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={onChangeTitle}\r\n                placeholder=\"제목\"\r\n                style={{flex: 'none', padding: '10px', fontSize: '18px'}}\r\n            />\r\n\r\n\r\n            <div style={{flex: '1', minHeight: '0', padding: '10px', fontSize: '14px', marginBottom: 'auto'}}>\r\n                {/* <ReactQuill/> 컴포넌트를 감싸는 div */}\r\n                <ReactQuill\r\n                    ref={quillRef}\r\n                    formats={formats}\r\n                    modules={modules}\r\n                    theme=\"snow\"\r\n                    onChange={onChangeContent}\r\n                    style={{flex: '1', minHeight: '0', padding: '10px', fontSize: '14px', width: '100%', height: '80%'}}\r\n                />\r\n                <div dangerouslySetInnerHTML={{__html: content}} style={{display: 'none'}}/>\r\n            </div>\r\n            <br/>\r\n            <div className=\"footer\" style={{ marginTop: 'auto', padding: '10px', position: 'relative', top: '70px' }}>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    marginTop: 'auto',\r\n                    marginRight: '10px',\r\n                    position: 'relative',\r\n                    top: '-200px'\r\n                }}>\r\n                    <ImageLibrary imageSrc={imageSrc} />\r\n                </div>\r\n\r\n                <br/>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    marginTop: 'auto',\r\n                    marginRight: '10px',\r\n                    position: 'relative',\r\n                    top: '-200px'\r\n                }}>\r\n                    <button onClick={handleSubmit} style={{marginRight: '10px'}}>완료</button>\r\n                    <button style={{}}>취소</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Board\\DetailPage.js",["136","137","138"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from '../Request/RequestConfig.js';\r\n\r\n\r\n\r\nexport default function Detail() {\r\n    const [loginError, setLoginError] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1); // 뒤로가기 버튼을 누를 때 이전 페이지로 이동\r\n    };\r\n\r\n\r\n    // 게시글 ID를 URL 파라미터로부터 추출합니다.\r\n    const { id } = useParams();\r\n\r\n    const fetchPost = async () => {\r\n        try {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n            console.log(accessToken);\r\n            console.log(refreshToken);\r\n\r\n            if (accessToken && refreshToken) {\r\n                const response = await axios.get(`/auth/shop/${id}`, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${accessToken}`,\r\n                        'RefreshToken': `Bearer ${refreshToken}`,\r\n                    },\r\n                });\r\n\r\n                if (response.status == 200) {\r\n                    const postData = await response.data;\r\n                    console.log(postData.data);\r\n                    setTitle(postData.data.title);\r\n                    setContent(postData.data.content);\r\n                } else {\r\n                    console.error('게시글을 가져오는데 실패했습니다.');\r\n                }\r\n            } else {\r\n                setLoginError('인증되지않은 유저는 접근할 수 없습니다.'); // 로그인되지 않은 경우 처리\r\n            }\r\n        } catch (error) {\r\n            console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\r\n            setLoginError('인증된 유저만 접근 가능합니다.');\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchPost(); // 컴포넌트가 마운트될 때(fetchPost()의 의존성 배열이 빈 배열) fetchPost 함수를 호출합니다.\r\n    }, []);\r\n    return (\r\n        <div style={{ height: '100vh', marginTop: '50px' }}>\r\n            <Container fluid>\r\n                <button onClick={handleGoBack} style={{ position: 'absolute', left: '10px', top: '70px' }}>\r\n                    뒤로가기\r\n                </button>\r\n                <Card border=\"primary\">\r\n                    <Card.Header style={{ height: 'calc(8vh - 10px)', fontSize: '30px' }}>{title}</Card.Header>\r\n                    <Card.Body style={{ height: 'calc(100vh - 50px)' }}>\r\n                        <Card.Text dangerouslySetInnerHTML={{ __html: content }} />\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Request\\RequestConfig.js",[],[],"C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\NextEditor\\QuillEditor.tsx",[],[],"C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Board\\ImageLibrary.js",["139","140"],[],"import React, { useState, useEffect } from 'react';\r\nimport { ListGroup, Button, Dropdown } from 'react-bootstrap';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst ImageLibrary = ({ imageSrc }) => {\r\n    const [urls, setUrls] = useState([]);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(imageSrc)) {\r\n            setUrls(imageSrc);\r\n        } else if (typeof imageSrc === 'string') {\r\n            setUrls([imageSrc]);\r\n        }\r\n    }, [imageSrc]);\r\n\r\n    const addItem = () => {\r\n        return urls.map((url, index) => {\r\n            const itemIndex = currentIndex + index + 1;\r\n            return (\r\n                <ListGroup.Item\r\n                    key={index}\r\n                    as=\"li\"\r\n                    draggable=\"true\"\r\n                    data-log=\"lib.diplomat\"\r\n                    data-index={itemIndex}\r\n                >\r\n                    <Card style={{ width: '5rem' }}>\r\n                        <Card.Img variant=\"top\" src={url} />\r\n                        <Card.Body>\r\n                            <Button variant=\"primary\" style={{ width: '3rem', fontSize: '11px' }}>\r\n                                삭제\r\n                            </Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </ListGroup.Item>\r\n            );\r\n        });\r\n    };\r\n\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggleDropdown = () => {\r\n        setDropdownOpen(!dropdownOpen);\r\n    };\r\n\r\n    return (\r\n        <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\r\n            <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic-button\">\r\n                사진 라이브러리\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu show={true} align=\"right\">\r\n                <ListGroup as=\"ul\" className=\"se-sidebar-list\">\r\n\r\n                </ListGroup>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n};\r\n\r\nexport default ImageLibrary;\r\n","C:\\OneDrive - 84913\\OneDrive\\study material\\workspace\\3.MACRO_STORE\\hjstore\\src\\main\\reactfront\\src\\components\\Styles\\Editorform\\Editor.style.js",["141"],[],{"ruleId":"142","severity":1,"message":"143","line":13,"column":8,"nodeType":"144","messageId":"145","endLine":13,"endColumn":19},{"ruleId":"142","severity":1,"message":"146","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"146","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"147","line":10,"column":12,"nodeType":"144","messageId":"145","endLine":10,"endColumn":22},{"ruleId":"142","severity":1,"message":"148","line":13,"column":11,"nodeType":"144","messageId":"145","endLine":13,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":24,"column":33,"nodeType":"151","messageId":"152","endLine":24,"endColumn":35},{"ruleId":"142","severity":1,"message":"146","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"148","line":16,"column":11,"nodeType":"144","messageId":"145","endLine":16,"endColumn":19},{"ruleId":"142","severity":1,"message":"153","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":21},{"ruleId":"142","severity":1,"message":"147","line":12,"column":12,"nodeType":"144","messageId":"145","endLine":12,"endColumn":22},{"ruleId":"154","severity":1,"message":"155","line":20,"column":8,"nodeType":"156","endLine":20,"endColumn":21,"suggestions":"157"},{"ruleId":"149","severity":1,"message":"150","line":36,"column":37,"nodeType":"151","messageId":"152","endLine":36,"endColumn":39},{"ruleId":"149","severity":1,"message":"150","line":51,"column":33,"nodeType":"151","messageId":"152","endLine":51,"endColumn":35},{"ruleId":"142","severity":1,"message":"158","line":1,"column":26,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"142","severity":1,"message":"159","line":17,"column":23,"nodeType":"144","messageId":"145","endLine":17,"endColumn":35},{"ruleId":"142","severity":1,"message":"160","line":18,"column":24,"nodeType":"144","messageId":"145","endLine":18,"endColumn":37},{"ruleId":"142","severity":1,"message":"147","line":19,"column":12,"nodeType":"144","messageId":"145","endLine":19,"endColumn":22},{"ruleId":"142","severity":1,"message":"161","line":39,"column":19,"nodeType":"144","messageId":"145","endLine":39,"endColumn":27},{"ruleId":"142","severity":1,"message":"162","line":96,"column":11,"nodeType":"144","messageId":"145","endLine":96,"endColumn":22},{"ruleId":"142","severity":1,"message":"163","line":151,"column":11,"nodeType":"144","messageId":"145","endLine":151,"endColumn":34},{"ruleId":"142","severity":1,"message":"164","line":179,"column":19,"nodeType":"144","messageId":"145","endLine":179,"endColumn":25},{"ruleId":"149","severity":1,"message":"150","line":203,"column":37,"nodeType":"151","messageId":"152","endLine":203,"endColumn":39},{"ruleId":"142","severity":1,"message":"147","line":10,"column":12,"nodeType":"144","messageId":"145","endLine":10,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":39,"column":37,"nodeType":"151","messageId":"152","endLine":39,"endColumn":39},{"ruleId":"154","severity":1,"message":"165","line":59,"column":8,"nodeType":"156","endLine":59,"endColumn":10,"suggestions":"166"},{"ruleId":"142","severity":1,"message":"167","line":7,"column":26,"nodeType":"144","messageId":"145","endLine":7,"endColumn":41},{"ruleId":"142","severity":1,"message":"168","line":17,"column":11,"nodeType":"144","messageId":"145","endLine":17,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},"no-unused-vars","'QuillEditor' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'loginError' is assigned a value but never used.","'location' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlePage'. Either include it or remove the dependency array.","ArrayExpression",["169"],"'useEffect' is defined but never used.","'setThumbnail' is assigned a value but never used.","'setThumbnails' is assigned a value but never used.","'fileName' is assigned a value but never used.","'deleteImage' is assigned a value but never used.","'handleCustomButtonClick' is assigned a value but never used.","'config' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPost'. Either include it or remove the dependency array.",["170"],"'setCurrentIndex' is assigned a value but never used.","'addItem' is assigned a value but never used.",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [currentPage, handlePage]",{"range":"175","text":"176"},"Update the dependencies array to be: [fetchPost]",{"range":"177","text":"178"},[698,711],"[currentPage, handlePage]",[2073,2075],"[fetchPost]"]