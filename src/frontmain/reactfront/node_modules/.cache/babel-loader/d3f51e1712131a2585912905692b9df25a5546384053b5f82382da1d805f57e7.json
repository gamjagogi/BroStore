{"ast":null,"code":"export const required = value => value || typeof value == \"number\" && value === 0 ? undefined : \"This field is required\";\nexport const number = value => value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\nexport const digit = value => value && !/^[0-9]*$/.test(value) ? \"Must be a number\" : undefined;\nconst maxLength = max => value => value && value.length > max ? `Must be ${max} characters or less` : undefined;\nexport const maxLengthOTP = maxLength(6);\nexport const maxLengthMobileNo = maxLength(15);\nexport const maxLength20 = maxLength(20);\nexport const maxLength50 = maxLength(50);\nexport const maxLength150 = maxLength(150);\nexport const maxLength500 = maxLength(500);\nexport const maxLength1000 = maxLength(1000);\nexport const maxLength800 = maxLength(800);\nconst minLength = min => value => value && value.length < min ? `Must be ${min} characters or more` : undefined;\nexport const minLengthMobileNo = minLength(5);\nexport const minLengthOTP = minLength(6);\nexport const minLength8 = minLength(8);\nconst maxValue = max => value => value && value > max ? `Must be at least ${max} or less` : undefined;\nexport const maxValueMobile = maxValue(999999999999999);\nexport const maxValueAmount = maxValue(2147483647);\nexport const maxValue127 = maxValue(127);\nexport const maxValue9 = maxValue(9);\nconst minValue = min => value => value !== undefined && value !== null && value !== \"\" && value < min ? `Must be at least ${min}` : undefined;\nexport const minValueMobile = minValue(9999);\nexport const minValue10 = minValue(10);\nexport const minValue0 = minValue(0);\nexport const email = value => value && !/^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/i.test(value) ? \"Invalid email address\" : undefined;\nexport const name = value => value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid name\" : undefined;\nexport const fName = value => value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid father name\" : undefined;\nexport const mName = value => value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid mother name\" : undefined;\nexport const isOverEighteen = date => {\n  let birthday = new Date(date);\n  // eslint-disable-next-line no-new-wrappers\n  let age = new Number((new Date().getTime() - birthday.getTime()) / 31536000000).toFixed(0);\n  if (age >= 18) {\n    return undefined;\n  }\n  return \"To successfully open an account you have to be at least 18 years old.\";\n};","map":{"version":3,"names":["required","value","undefined","number","isNaN","Number","digit","test","maxLength","max","length","maxLengthOTP","maxLengthMobileNo","maxLength20","maxLength50","maxLength150","maxLength500","maxLength1000","maxLength800","minLength","min","minLengthMobileNo","minLengthOTP","minLength8","maxValue","maxValueMobile","maxValueAmount","maxValue127","maxValue9","minValue","minValueMobile","minValue10","minValue0","email","name","fName","mName","isOverEighteen","date","birthday","Date","age","getTime","toFixed"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/helpers/validation.js"],"sourcesContent":["export const required = (value) =>\r\n  value || (typeof value == \"number\" && value === 0)\r\n    ? undefined\r\n    : \"This field is required\";\r\nexport const number = (value) =>\r\n  value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\r\nexport const digit = (value) =>\r\n  value && !/^[0-9]*$/.test(value) ? \"Must be a number\" : undefined;\r\nconst maxLength = (max) => (value) =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const maxLengthOTP = maxLength(6);\r\nexport const maxLengthMobileNo = maxLength(15);\r\nexport const maxLength20 = maxLength(20);\r\nexport const maxLength50 = maxLength(50);\r\nexport const maxLength150 = maxLength(150);\r\nexport const maxLength500 = maxLength(500);\r\nexport const maxLength1000 = maxLength(1000);\r\nexport const maxLength800 = maxLength(800);\r\nconst minLength = (min) => (value) =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\r\nexport const minLengthMobileNo = minLength(5);\r\nexport const minLengthOTP = minLength(6);\r\nexport const minLength8 = minLength(8);\r\nconst maxValue = (max) => (value) =>\r\n  value && value > max ? `Must be at least ${max} or less` : undefined;\r\nexport const maxValueMobile = maxValue(999999999999999);\r\nexport const maxValueAmount = maxValue(2147483647);\r\nexport const maxValue127 = maxValue(127);\r\nexport const maxValue9 = maxValue(9);\r\n\r\nconst minValue = (min) => (value) =>\r\n  value !== undefined && value !== null && value !== \"\" && value < min\r\n    ? `Must be at least ${min}`\r\n    : undefined;\r\nexport const minValueMobile = minValue(9999);\r\nexport const minValue10 = minValue(10);\r\nexport const minValue0 = minValue(0);\r\nexport const email = (value) =>\r\n  value && !/^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/i.test(value)\r\n    ? \"Invalid email address\"\r\n    : undefined;\r\nexport const name = (value) =>\r\n  value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid name\" : undefined;\r\n  export const fName = (value) =>\r\n  value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid father name\" : undefined;\r\n  export const mName = (value) =>\r\n  value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid mother name\" : undefined;\r\nexport const isOverEighteen = (date) => {\r\n  let birthday = new Date(date);\r\n  // eslint-disable-next-line no-new-wrappers\r\n  let age = new Number(\r\n    (new Date().getTime() - birthday.getTime()) / 31536000000\r\n  ).toFixed(0);\r\n  if (age >= 18) {\r\n    return undefined;\r\n  }\r\n  return \"To successfully open an account you have to be at least 18 years old.\";\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}