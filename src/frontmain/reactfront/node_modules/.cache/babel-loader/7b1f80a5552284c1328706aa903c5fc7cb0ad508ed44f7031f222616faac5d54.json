{"ast":null,"code":"var _jsxFileName = \"C:\\\\OneDrive - 84913\\\\OneDrive\\\\study material\\\\workspace\\\\3.MACRO_STORE\\\\hjstore\\\\src\\\\frontmain\\\\reactfront\\\\src\\\\components\\\\Board\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useRef, useMemo } from 'react';\nimport axios from '../Request/RequestConfig.js';\nimport AWS from 'aws-sdk';\nimport ImageLibrary from \"./ImageLibrary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Editor() {\n  _s();\n  const quillRef = useRef(null);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [thumbnail, setThumbnail] = useState('');\n  const [thumbnails, setThumbnails] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const [imageSrc, setImageSrc] = useState('');\n  const navigate = useNavigate();\n\n  // 이미지 추가\n  const imageHandler = () => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    input.click();\n    input.addEventListener('change', async () => {\n      const ACCESS_KEY = 'AKIAUM5SAFCTKG4Z2PGC';\n      const SECRET_ACCESS_KEY = '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';\n      const REGION = \"ap-northeast-2\";\n      const S3_BUCKET = 'image-gamja';\n      const file = input.files[0];\n      const fileName = file.name;\n\n      // AWS ACCESS KEY를 세팅합니다.\n      AWS.config.update({\n        accessKeyId: ACCESS_KEY,\n        secretAccessKey: SECRET_ACCESS_KEY\n      });\n\n      // 버킷에 맞는 이름과 리전을 설정합니다.\n      const ReactS3Client = new AWS.S3({\n        params: {\n          Bucket: S3_BUCKET\n        },\n        region: REGION\n      });\n\n      // 파일과 파일이름을 넘겨주면 됩니다.\n      const params = {\n        ACL: 'public-read',\n        Body: file,\n        Bucket: S3_BUCKET,\n        Key: file.name\n      };\n      ReactS3Client.putObject(params).on('httpUploadProgress', evt => {\n        alert(\"SUCCESS\");\n      }).send((err, data) => {\n        if (err) {\n          console.error('업로드 오류:', err);\n          alert('error');\n        } else {\n          const {\n            Bucket,\n            Key\n          } = params; // params 객체에서 Bucket과 Key를 추출합니다.\n          const imageUrl = `https://${Bucket}.s3.amazonaws.com/${Key}`; // 이미지의 위치(URL)을 구성합니다.\n          console.log('업로드 완료. 이미지 위치:', imageUrl);\n          setImageSrc(imageUrl);\n\n          // 여기서 Quill 편집기 폼에 이미지를 출력하는 로직을 실행할 수 있습니다.\n          const editor = quillRef.current.getEditor();\n          //커서 위치 받아오기 위함.\n          const range = editor.getSelection(true);\n          editor.insertEmbed(range.index, 'image', `${imageUrl}`);\n\n          // 이미지 업로드 후 커서 이미지 한칸 옆으로 이동.\n          editor.setSelection(range.index + 1);\n        }\n      });\n    });\n  };\n\n  // 이미지 삭제 로직\n  const deleteImage = imageIdentifier => {\n    const editor = quillRef.current.getEditor();\n    const contents = editor.getContents();\n\n    // Quill 컨텐츠의 각 블록을 순회하면서 이미지를 찾고, 식별자와 일치하는 이미지를 삭제\n    contents.ops.forEach(block => {\n      if (block.insert && block.insert.image) {\n        const imageUrl = block.insert.image;\n        if (imageUrl === imageIdentifier) {\n          // 이미지 삭제\n          editor.deleteText(contents.ops.indexOf(block), 1);\n        }\n      }\n    });\n  };\n  const modules = useMemo(() => ({\n    toolbar: {\n      container: [[{\n        'header': [1, 2, 3, 4, 5, 6, false]\n      }], [{\n        'font': []\n      }], [{\n        'align': []\n      }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n        'list': 'ordered'\n      }, {\n        'list': 'bullet'\n      }, 'link'], [{\n        'color': ['#000000', '#e60000', '#ff9900', '#ffff00', '#008a00', '#0066cc', '#9933ff', '#ffffff', '#facccc', '#ffebcc', '#ffffcc', '#cce8cc', '#cce0f5', '#ebd6ff', '#bbbbbb', '#f06666', '#ffc266', '#ffff66', '#66b966', '#66a3e0', '#c285ff', '#888888', '#a10000', '#b26b00', '#b2b200', '#006100', '#0047b2', '#6b24b2', '#444444', '#5c0000', '#663d00', '#666600', '#003700', '#002966', '#3d1466', 'custom-color']\n      }, {\n        'background': []\n      }], ['image', 'video'], ['clean'], [{\n        'custom-button': '<i class=\"fas fa-bold\"></i>'\n      }]],\n      handlers: {\n        image: imageHandler\n      }\n    },\n    clipboard: {\n      matchVisual: false\n    }\n  }), []);\n  const formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'align', 'image', 'div'];\n  const onChangeTitle = event => {\n    const newTitle = event.target.value;\n    if (newTitle.length <= 60) {\n      setTitle(newTitle);\n    } else {\n      // 팝업을 띄우는 로직을 추가하거나 원하는 작업을 수행합니다.\n      // 예시: alert을 사용하여 팝업을 띄움\n      alert('제목은 60자 이하여야 합니다.');\n    }\n  };\n  const onChangeContent = content => {\n    setContent(content);\n  };\n  const handleSubmit = async () => {\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n      console.log(accessToken);\n      console.log(refreshToken);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          RefreshToken: `Bearer ${refreshToken}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      const requestData = {\n        title,\n        content\n      };\n      if (thumbnails !== \"\") {\n        requestData.thumbnail = thumbnail;\n      }\n      if (accessToken && refreshToken) {\n        // 요청 보내기\n        console.log(requestData);\n        const response = await axios.post('/manager/shop/save', JSON.stringify(requestData), {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${accessToken}`,\n            'RefreshToken': `Bearer ${refreshToken}`\n          }\n        });\n        if (response.status == 200) {\n          // 응답 성공 시 처리할 작업\n          const data = await response.data;\n          console.log(data); // 요청에 대한 응답 처리\n          navigate('/shop');\n        } else {\n          // 응답 실패 시 처리할 작업\n          const errorMessages = await response.data;\n          console.log(errorMessages.errors);\n          const errors = errorMessages.errors;\n          for (const error of errors) {\n            console.log(error.defaultMessage);\n            alert(error.defaultMessage);\n          }\n        }\n      } else {\n        setLoginError('인증 권한을 가진 유저만 접근 가능합니다.'); // 로그인되지 않은 경우 처리\n      }\n    } catch (error) {\n      console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\n      setLoginError('인증된 유저만 접근 가능합니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: onChangeTitle,\n      placeholder: \"\\uC81C\\uBAA9\",\n      style: {\n        flex: 'none',\n        padding: '10px',\n        fontSize: '18px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '1',\n        minHeight: '0',\n        padding: '10px',\n        fontSize: '14px',\n        marginBottom: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n        ref: quillRef,\n        formats: formats,\n        modules: modules,\n        theme: \"snow\",\n        onChange: onChangeContent,\n        style: {\n          flex: '1',\n          minHeight: '0',\n          padding: '10px',\n          fontSize: '14px',\n          width: '100%',\n          height: '80%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: content\n        },\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      style: {\n        marginTop: 'auto',\n        padding: '10px',\n        position: 'relative',\n        top: '70px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginTop: 'auto',\n          marginRight: '10px',\n          position: 'relative',\n          top: '-200px'\n        },\n        children: /*#__PURE__*/_jsxDEV(ImageLibrary, {\n          imageSrc: imageSrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginTop: 'auto',\n          marginRight: '10px',\n          position: 'relative',\n          top: '-200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          style: {\n            marginRight: '10px'\n          },\n          children: \"\\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {},\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n}\n_s(Editor, \"okQuWaohidI5k8xu7mRgWVjHpyU=\", false, function () {\n  return [useNavigate];\n});\n_c = Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ReactQuill","useRef","useMemo","axios","AWS","ImageLibrary","jsxDEV","_jsxDEV","Editor","_s","quillRef","title","setTitle","content","setContent","thumbnail","setThumbnail","thumbnails","setThumbnails","loginError","setLoginError","imageSrc","setImageSrc","navigate","imageHandler","input","document","createElement","setAttribute","click","addEventListener","ACCESS_KEY","SECRET_ACCESS_KEY","REGION","S3_BUCKET","file","files","fileName","name","config","update","accessKeyId","secretAccessKey","ReactS3Client","S3","params","Bucket","region","ACL","Body","Key","putObject","on","evt","alert","send","err","data","console","error","imageUrl","log","editor","current","getEditor","range","getSelection","insertEmbed","index","setSelection","deleteImage","imageIdentifier","contents","getContents","ops","forEach","block","insert","image","deleteText","indexOf","modules","toolbar","container","handlers","clipboard","matchVisual","formats","onChangeTitle","event","newTitle","target","value","length","onChangeContent","handleSubmit","accessToken","localStorage","getItem","refreshToken","headers","Authorization","RefreshToken","requestData","response","post","JSON","stringify","status","errorMessages","errors","defaultMessage","style","display","flexDirection","height","children","type","onChange","placeholder","flex","padding","fontSize","_jsxFileName","lineNumber","columnNumber","minHeight","marginBottom","ref","theme","width","dangerouslySetInnerHTML","__html","className","marginTop","position","top","justifyContent","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/components/Board/Editor.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {useRef, useMemo} from 'react';\r\nimport axios from '../Request/RequestConfig.js';\r\nimport AWS from 'aws-sdk';\r\nimport ImageLibrary from \"./ImageLibrary\";\r\n\r\n\r\nexport default function Editor() {\r\n    const quillRef = useRef(null);\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [thumbnail, setThumbnail] = useState('');\r\n    const [thumbnails, setThumbnails] = useState('');\r\n    const [loginError, setLoginError] = useState('');\r\n    const [imageSrc, setImageSrc] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n\r\n    // 이미지 추가\r\n    const imageHandler = () => {\r\n        const input = document.createElement('input');\r\n        input.setAttribute('type', 'file');\r\n        input.setAttribute('accept', 'image/*');\r\n        input.click();\r\n\r\n        input.addEventListener('change', async () => {\r\n\r\n            const ACCESS_KEY = 'AKIAUM5SAFCTKG4Z2PGC';\r\n            const SECRET_ACCESS_KEY = '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';\r\n            const REGION = \"ap-northeast-2\";\r\n            const S3_BUCKET = 'image-gamja';\r\n\r\n            const file = input.files[0];\r\n            const fileName = file.name;\r\n\r\n            // AWS ACCESS KEY를 세팅합니다.\r\n            AWS.config.update({\r\n                accessKeyId: ACCESS_KEY,\r\n                secretAccessKey: SECRET_ACCESS_KEY\r\n            });\r\n\r\n            // 버킷에 맞는 이름과 리전을 설정합니다.\r\n            const ReactS3Client = new AWS.S3({\r\n                params: {Bucket: S3_BUCKET},\r\n                region: REGION,\r\n            });\r\n\r\n            // 파일과 파일이름을 넘겨주면 됩니다.\r\n            const params = {\r\n                ACL: 'public-read',\r\n                Body: file,\r\n                Bucket: S3_BUCKET,\r\n                Key: file.name\r\n            };\r\n\r\n            ReactS3Client.putObject(params)\r\n                .on('httpUploadProgress', (evt) => {\r\n                    alert(\"SUCCESS\")\r\n                })\r\n                .send((err, data) => {\r\n                    if (err) {\r\n                        console.error('업로드 오류:', err);\r\n                        alert('error');\r\n                    } else {\r\n\r\n                        const {Bucket, Key} = params; // params 객체에서 Bucket과 Key를 추출합니다.\r\n                        const imageUrl = `https://${Bucket}.s3.amazonaws.com/${Key}`; // 이미지의 위치(URL)을 구성합니다.\r\n                        console.log('업로드 완료. 이미지 위치:', imageUrl);\r\n\r\n                        setImageSrc(imageUrl);\r\n\r\n\r\n\r\n                        // 여기서 Quill 편집기 폼에 이미지를 출력하는 로직을 실행할 수 있습니다.\r\n                        const editor = quillRef.current.getEditor();\r\n                        //커서 위치 받아오기 위함.\r\n                        const range = editor.getSelection(true);\r\n                        editor.insertEmbed(\r\n                            range.index,\r\n                            'image',\r\n                            `${imageUrl}`,\r\n                        );\r\n\r\n                        // 이미지 업로드 후 커서 이미지 한칸 옆으로 이동.\r\n                        editor.setSelection(range.index + 1);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    // 이미지 삭제 로직\r\n    const deleteImage = (imageIdentifier) => {\r\n        const editor = quillRef.current.getEditor();\r\n        const contents = editor.getContents();\r\n\r\n        // Quill 컨텐츠의 각 블록을 순회하면서 이미지를 찾고, 식별자와 일치하는 이미지를 삭제\r\n        contents.ops.forEach((block) => {\r\n            if (block.insert && block.insert.image) {\r\n                const imageUrl = block.insert.image;\r\n                if (imageUrl === imageIdentifier) {\r\n                    // 이미지 삭제\r\n                    editor.deleteText(contents.ops.indexOf(block), 1);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const modules = useMemo(\r\n        () => ({\r\n            toolbar: {\r\n                container: [\r\n                    [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n                    [{'font': []}],\r\n                    [{'align': []}],\r\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                    [{'list': 'ordered'}, {'list': 'bullet'}, 'link'],\r\n                    [{'color': ['#000000', '#e60000', '#ff9900', '#ffff00', '#008a00', '#0066cc', '#9933ff', '#ffffff', '#facccc', '#ffebcc', '#ffffcc', '#cce8cc', '#cce0f5', '#ebd6ff', '#bbbbbb', '#f06666', '#ffc266', '#ffff66', '#66b966', '#66a3e0', '#c285ff', '#888888', '#a10000', '#b26b00', '#b2b200', '#006100', '#0047b2', '#6b24b2', '#444444', '#5c0000', '#663d00', '#666600', '#003700', '#002966', '#3d1466', 'custom-color']}, {'background': []}],\r\n                    ['image', 'video'],\r\n                    ['clean'],\r\n                    [{'custom-button': '<i class=\"fas fa-bold\"></i>'}]\r\n                ],\r\n                handlers: {image: imageHandler},\r\n            },\r\n            clipboard: {\r\n                matchVisual: false,\r\n            },\r\n        }),\r\n        [],\r\n    );\r\n\r\n    const formats = [\r\n        'header',\r\n        'font',\r\n        'size',\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        'blockquote',\r\n        'list',\r\n        'bullet',\r\n        'align',\r\n        'image',\r\n        'div'\r\n    ];\r\n\r\n\r\n    const onChangeTitle = (event) => {\r\n        const newTitle = event.target.value;\r\n        if (newTitle.length <= 60) {\r\n            setTitle(newTitle);\r\n        } else {\r\n            // 팝업을 띄우는 로직을 추가하거나 원하는 작업을 수행합니다.\r\n            // 예시: alert을 사용하여 팝업을 띄움\r\n            alert('제목은 60자 이하여야 합니다.');\r\n        }\r\n    };\r\n\r\n    const onChangeContent = (content) => {\r\n        setContent(content);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n            console.log(accessToken);\r\n            console.log(refreshToken);\r\n\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                    RefreshToken: `Bearer ${refreshToken}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            };\r\n            const requestData = {title, content};\r\n\r\n            if (thumbnails !== \"\") {\r\n                requestData.thumbnail = thumbnail;\r\n            }\r\n\r\n            if (accessToken && refreshToken) {\r\n                // 요청 보내기\r\n                console.log(requestData);\r\n                const response = await axios.post('/manager/shop/save', JSON.stringify(requestData), {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${accessToken}`,\r\n                        'RefreshToken': `Bearer ${refreshToken}`,\r\n                    },\r\n                });\r\n\r\n                if (response.status == 200) {\r\n                    // 응답 성공 시 처리할 작업\r\n                    const data = await response.data;\r\n                    console.log(data); // 요청에 대한 응답 처리\r\n                    navigate('/shop');\r\n\r\n                } else {\r\n                    // 응답 실패 시 처리할 작업\r\n                    const errorMessages = await response.data;\r\n                    console.log(errorMessages.errors);\r\n                    const errors = errorMessages.errors;\r\n                    for (const error of errors) {\r\n                        console.log(error.defaultMessage);\r\n                        alert(error.defaultMessage);\r\n                    }\r\n                }\r\n            } else {\r\n                setLoginError('인증 권한을 가진 유저만 접근 가능합니다.'); // 로그인되지 않은 경우 처리\r\n            }\r\n        } catch (error) {\r\n            console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\r\n            setLoginError('인증된 유저만 접근 가능합니다.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column', height: '100vh'}}>\r\n            <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={onChangeTitle}\r\n                placeholder=\"제목\"\r\n                style={{flex: 'none', padding: '10px', fontSize: '18px'}}\r\n            />\r\n\r\n\r\n            <div style={{flex: '1', minHeight: '0', padding: '10px', fontSize: '14px', marginBottom: 'auto'}}>\r\n                {/* <ReactQuill/> 컴포넌트를 감싸는 div */}\r\n                <ReactQuill\r\n                    ref={quillRef}\r\n                    formats={formats}\r\n                    modules={modules}\r\n                    theme=\"snow\"\r\n                    onChange={onChangeContent}\r\n                    style={{flex: '1', minHeight: '0', padding: '10px', fontSize: '14px', width: '100%', height: '80%'}}\r\n                />\r\n                <div dangerouslySetInnerHTML={{__html: content}} style={{display: 'none'}}/>\r\n            </div>\r\n            <br/>\r\n            <div className=\"footer\" style={{ marginTop: 'auto', padding: '10px', position: 'relative', top: '70px' }}>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    marginTop: 'auto',\r\n                    marginRight: '10px',\r\n                    position: 'relative',\r\n                    top: '-200px'\r\n                }}>\r\n                    <ImageLibrary imageSrc={imageSrc} />\r\n                </div>\r\n\r\n                <br/>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    marginTop: 'auto',\r\n                    marginRight: '10px',\r\n                    position: 'relative',\r\n                    top: '-200px'\r\n                }}>\r\n                    <button onClick={handleSubmit} style={{marginRight: '10px'}}>완료</button>\r\n                    <button style={{}}>취소</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}