{"ast":null,"code":"var _jsxFileName = \"C:\\\\OneDrive - 84913\\\\OneDrive\\\\study material\\\\workspace\\\\3.MACRO_STORE\\\\hjstore\\\\src\\\\frontmain\\\\reactfront\\\\src\\\\components\\\\Board\\\\ImageLibrary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, Button, Dropdown } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport { Editor } from '../Styles/Editorform/Editor.style';\nimport PostEditor from \"./PostEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageLibrary = _ref => {\n  _s();\n  let {\n    imageSrc,\n    index\n  } = _ref;\n  const [loginError, setLoginError] = useState('');\n  const [urls, setUrls] = useState([]);\n  const [updatedDomArray, setUpdatedDomArray] = useState([]);\n  const [deleted, setDeleted] = useState([]);\n\n  // 이미지 소스를 urls 배열에 추가.(기존 요소 유지하며 추가)\n  useEffect(() => {\n    if (typeof imageSrc === 'string') {\n      setUrls(prevUrls => prevUrls.filter(url => url !== ''));\n      setUrls(prevUrls => [...prevUrls, imageSrc]);\n    }\n  }, [imageSrc, index]);\n\n  // urls배열의 요소를 하나씩 dom형태로 만들어, updatedDomArray배열에 넣는다. (기존 요소 초기화됨)\n  useEffect(() => {\n    const domArray = urls.map((url, index) => {\n      const itemIndex = index + 1;\n      const uniqueKey = `image_${itemIndex}`;\n      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        as: \"li\",\n        draggable: \"true\",\n        \"data-log\": \"lib.diplomat\",\n        \"data-index\": itemIndex,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleDelete(itemIndex),\n              variant: \"primary\",\n              style: {\n                width: '3rem',\n                fontSize: '11px'\n              },\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, uniqueKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    });\n    setUpdatedDomArray(domArray);\n  }, [urls]);\n\n  // 특정 이미지 삭제\n  const handleDelete = async itemIndex => {\n    try {\n      console.log(urls);\n      console.log(String(urls.filter((_, index) => index + 1 == itemIndex)));\n      setDeleted(urls.filter((_, index) => index + 1 == itemIndex));\n      setUrls(prevUrls => prevUrls.filter((_, index) => index + 1 !== itemIndex));\n      console.log(deleted);\n      console.log('라이브러리');\n      PostEditor({\n        deleted\n      });\n    } catch (error) {\n      console.error('삭제 중 오류 발생.', error);\n      setLoginError('삭제 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 라이브러리 열림,닫힘 초기화\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    show: dropdownOpen,\n    onToggle: toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"primary\",\n      id: \"dropdown-basic-button\",\n      children: \"\\uC0AC\\uC9C4 \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      show: true,\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          as: \"ul\",\n          className: \"se-sidebar-list\",\n          children: updatedDomArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageLibrary, \"A1LPE7GxrfvDCNJePy5ncf65OGE=\");\n_c = ImageLibrary;\nexport default ImageLibrary;\nvar _c;\n$RefreshReg$(_c, \"ImageLibrary\");","map":{"version":3,"names":["React","useState","useEffect","ListGroup","Button","Dropdown","Card","Editor","PostEditor","jsxDEV","_jsxDEV","ImageLibrary","_ref","_s","imageSrc","index","loginError","setLoginError","urls","setUrls","updatedDomArray","setUpdatedDomArray","deleted","setDeleted","prevUrls","filter","url","domArray","map","itemIndex","uniqueKey","Item","as","draggable","children","style","width","Img","variant","src","fileName","_jsxFileName","lineNumber","columnNumber","Body","onClick","handleDelete","fontSize","console","log","String","_","error","dropdownOpen","setDropdownOpen","toggleDropdown","show","onToggle","Toggle","id","Menu","align","className","_c","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/components/Board/ImageLibrary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ListGroup, Button, Dropdown } from 'react-bootstrap';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Editor } from '../Styles/Editorform/Editor.style';\r\nimport PostEditor from \"./PostEditor\"\r\n\r\nconst ImageLibrary = ({ imageSrc,index }) => {\r\n    const [loginError, setLoginError] = useState('');\r\n    const [urls, setUrls] = useState([]);\r\n    const [updatedDomArray, setUpdatedDomArray] = useState([]);\r\n    const [deleted, setDeleted] = useState([]);\r\n\r\n    // 이미지 소스를 urls 배열에 추가.(기존 요소 유지하며 추가)\r\n    useEffect(() => {\r\n        if (typeof imageSrc === 'string') {\r\n            setUrls(prevUrls => prevUrls.filter(url => url !== ''));\r\n            setUrls(prevUrls => [...prevUrls, imageSrc]);\r\n        }\r\n    }, [imageSrc,index]);\r\n\r\n    // urls배열의 요소를 하나씩 dom형태로 만들어, updatedDomArray배열에 넣는다. (기존 요소 초기화됨)\r\n    useEffect(() => {\r\n        const domArray = urls.map((url, index) => {\r\n            const itemIndex = index + 1;\r\n            const uniqueKey = `image_${itemIndex}`;\r\n            return (\r\n                <ListGroup.Item\r\n                    as=\"li\"\r\n                    draggable=\"true\"\r\n                    data-log=\"lib.diplomat\"\r\n                    data-index={itemIndex}\r\n                    key={uniqueKey}\r\n                >\r\n                    <Card style={{ width: '5rem' }}>\r\n                        <Card.Img variant=\"top\" src={url} />\r\n                        <Card.Body>\r\n                            <Button onClick={() => handleDelete(itemIndex)} variant=\"primary\" style={{ width: '3rem', fontSize: '11px' }}>\r\n                                삭제\r\n                            </Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </ListGroup.Item>\r\n            );\r\n        });\r\n        setUpdatedDomArray(domArray);\r\n    }, [urls]);\r\n\r\n    // 특정 이미지 삭제\r\n    const handleDelete = async (itemIndex) => {\r\n        try {\r\n            console.log(urls);\r\n            console.log(String(urls.filter((_,index) => index + 1 == itemIndex)));\r\n\r\n            setDeleted(urls.filter((_,index) => index + 1 == itemIndex));\r\n            setUrls(prevUrls => prevUrls.filter((_, index) => index + 1 !== itemIndex));\r\n\r\n            console.log(deleted);\r\n            console.log('라이브러리');\r\n            PostEditor( {deleted});\r\n\r\n        } catch (error) {\r\n            console.error('삭제 중 오류 발생.', error);\r\n            setLoginError('삭제 중 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    // 라이브러리 열림,닫힘 초기화\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggleDropdown = () => {\r\n        setDropdownOpen(!dropdownOpen);\r\n    };\r\n\r\n    return (\r\n        <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\r\n            <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic-button\">\r\n                사진 라이브러리\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu show={true} align=\"right\">\r\n                <Editor>\r\n                    <ListGroup as=\"ul\" className=\"se-sidebar-list\">\r\n                        {updatedDomArray}\r\n                    </ListGroup>\r\n                </Editor>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n};\r\n\r\nexport default ImageLibrary;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}