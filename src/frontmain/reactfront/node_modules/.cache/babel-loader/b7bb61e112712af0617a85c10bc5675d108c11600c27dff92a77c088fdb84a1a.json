{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"../Request/RequestConfig\";\nimport { useEffect, useState } from \"react\";\nconst DataRequest = url => {\n  _s();\n  console.log(\"진입\");\n  console.log(url);\n  const [requestData, setRequestData] = useState([]);\n  useEffect(() => {\n    console.log(\"useEffect시작\");\n    fetchPost().then(postData => {\n      console.log(postData.data);\n      setRequestData(postData);\n    });\n  }, []);\n  const fetchPost = async () => {\n    try {\n      console.log('fetch시작');\n      const accessToken = localStorage.getItem('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n\n      // Fetch post using `id`\n      const response = await axios.get({\n        url\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`,\n          'RefreshToken': `Bearer ${refreshToken}`\n        }\n      });\n      if (response.status === 200) {\n        const postData = response.data;\n        console.log(postData.data);\n        return postData;\n      } else {\n        console.error('게시글을 가져오는데 실패했습니다.');\n        throw new Error('게시글을 가져오는데 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('인증되지 않은 사용자가 접근하려 합니다.', error);\n      throw error;\n    }\n  };\n  return requestData;\n};\n_s(DataRequest, \"H5Fo8yLBBN2+72gLMwT4AaLVfL8=\");\n_c = DataRequest;\nexport default DataRequest;\nvar _c;\n$RefreshReg$(_c, \"DataRequest\");","map":{"version":3,"names":["axios","useEffect","useState","DataRequest","url","_s","console","log","requestData","setRequestData","fetchPost","then","postData","data","accessToken","localStorage","getItem","refreshToken","response","get","headers","status","error","Error","_c","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/screens/product/DataRequest.js"],"sourcesContent":["import axios from \"../Request/RequestConfig\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst DataRequest = (url) => {\r\n\r\n    console.log(\"진입\");\r\n    console.log(url)\r\n\r\n    const [requestData,setRequestData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"useEffect시작\");\r\n        fetchPost().then((postData) => {\r\n            console.log(postData.data);\r\n            setRequestData(postData);\r\n        })\r\n    }, []);\r\n\r\n    const fetchPost = async () => {\r\n        try {\r\n            console.log('fetch시작');\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n            // Fetch post using `id`\r\n            const response = await axios.get({url}, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}`,\r\n                    'RefreshToken': `Bearer ${refreshToken}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                const postData = response.data;\r\n                console.log(postData.data);\r\n\r\n                return postData;\r\n            } else {\r\n                console.error('게시글을 가져오는데 실패했습니다.');\r\n                throw new Error('게시글을 가져오는데 실패했습니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('인증되지 않은 사용자가 접근하려 합니다.', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    return requestData;\r\n}\r\n\r\nexport default DataRequest;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,0BAA0B;AAC5C,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,MAAMC,WAAW,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAEzBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACjBD,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;EAEhB,MAAM,CAACI,WAAW,EAACC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZK,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BG,SAAS,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC3BN,OAAO,CAACC,GAAG,CAACK,QAAQ,CAACC,IAAI,CAAC;MAC1BJ,cAAc,CAACG,QAAQ,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACAJ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB,MAAMO,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACvD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;;MAEzD;MACA,MAAME,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC;QAACf;MAAG,CAAC,EAAE;QACpCgB,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASN,WAAY,EAAC;UACxC,cAAc,EAAG,UAASG,YAAa;QAC3C;MACJ,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QACzB,MAAMT,QAAQ,GAAGM,QAAQ,CAACL,IAAI;QAC9BP,OAAO,CAACC,GAAG,CAACK,QAAQ,CAACC,IAAI,CAAC;QAE1B,OAAOD,QAAQ;MACnB,CAAC,MAAM;QACHN,OAAO,CAACgB,KAAK,CAAC,oBAAoB,CAAC;QACnC,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACzC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZhB,OAAO,CAACgB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,OAAOd,WAAW;AACtB,CAAC;AAAAH,EAAA,CA9CKF,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}