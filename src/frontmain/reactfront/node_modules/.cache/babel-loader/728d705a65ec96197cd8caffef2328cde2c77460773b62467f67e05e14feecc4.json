{"ast":null,"code":"var _jsxFileName = \"C:\\\\OneDrive - 84913\\\\OneDrive\\\\study material\\\\workspace\\\\3.MACRO_STORE\\\\hjstore\\\\src\\\\frontmain\\\\reactfront\\\\src\\\\screens\\\\Login\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Login } from \"../../components/Styles/Loginform/Login.style\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from '../Request/RequestConfig.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('/login', JSON.stringify({\n        email,\n        password\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status == 200) {\n        // 로그인 성공 시 처리할 작업\n        const accessToken = response.headers.get('access-token');\n        const refreshToken = response.headers.get('refresh-token');\n        console.log(accessToken);\n        const data = await response.data;\n        console.log(JSON.stringify(data)); // JSON 형태로 String형태로 출력\n        console.log(data.data.username);\n\n        // 로그인 정보 저장\n        sessionStorage.setItem('userData', JSON.stringify(data.data));\n\n        // 액세스 토큰과 리프레시 토큰을 localStorage에 저장\n        localStorage.setItem('accessToken', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n\n        //gamja@gmail.com\n        navigate('/shop');\n      } else {\n        // 로그인 실패 시 처리할 작업\n        setLoginError('로그인에 실패했습니다. 다시 시도해주세요.');\n      }\n    } catch (error) {\n      console.error('로그인 요청 중 오류가 발생했습니다.', error);\n      setLoginError('로그인 요청 중 오류가 발생했습니다.');\n    }\n  };\n  const handleJoin = () => {\n    navigate('/join');\n  };\n  return /*#__PURE__*/_jsxDEV(Login, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoin,\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"PDvDPQzR4zoYfdUPcHWUywAOYxk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Login","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","loginError","setLoginError","navigate","location","handleLogin","response","post","JSON","stringify","headers","status","accessToken","get","refreshToken","console","log","data","username","sessionStorage","setItem","localStorage","error","handleJoin","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/screens/Login/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {Login} from \"../../components/Styles/Loginform/Login.style\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from '../Request/RequestConfig.js';\r\n\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginError, setLoginError] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            const response = await axios.post('/login', JSON.stringify({ email, password }), {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (response.status == 200) {\r\n                // 로그인 성공 시 처리할 작업\r\n                const accessToken = response.headers.get('access-token');\r\n                const refreshToken = response.headers.get('refresh-token');\r\n\r\n                console.log(accessToken);\r\n\r\n                const data = await response.data;\r\n                console.log(JSON.stringify(data)); // JSON 형태로 String형태로 출력\r\n                console.log(data.data.username);\r\n\r\n\r\n\r\n                // 로그인 정보 저장\r\n                sessionStorage.setItem('userData', JSON.stringify(data.data));\r\n\r\n                // 액세스 토큰과 리프레시 토큰을 localStorage에 저장\r\n                localStorage.setItem('accessToken', accessToken);\r\n                localStorage.setItem('refreshToken', refreshToken);\r\n\r\n                //gamja@gmail.com\r\n                navigate('/shop');\r\n\r\n            } else {\r\n                // 로그인 실패 시 처리할 작업\r\n                setLoginError('로그인에 실패했습니다. 다시 시도해주세요.');\r\n            }\r\n        } catch (error) {\r\n            console.error('로그인 요청 중 오류가 발생했습니다.', error);\r\n            setLoginError('로그인 요청 중 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    const handleJoin = () => {\r\n        navigate('/join')\r\n    }\r\n\r\n\r\n    return (\r\n        <Login>\r\n            <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={handleLogin}>로그인</button>\r\n            <button onClick={handleJoin}>회원가입</button>\r\n        </Login>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}