{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"../Request/RequestConfig\";\nimport { useEffect, useState } from \"react\";\nconst DataRequest = url => {\n  _s();\n  const [requestUrl, setRequestUrl] = useState('');\n  useEffect(() => {\n    fetchPost();\n  }, []);\n  const fetchPost = async () => {\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n\n      // Fetch post using `id`\n      const response = await axios.get(`${url}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`,\n          'RefreshToken': `Bearer ${refreshToken}`\n        }\n      });\n      if (response.status === 200) {\n        const postData = response.data;\n        console.log(postData.data);\n        setRequestUrl(postData);\n      } else {\n        console.error('게시글을 가져오는데 실패했습니다.');\n        throw new Error('게시글을 가져오는데 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('인증되지 않은 사용자가 접근하려 합니다.', error);\n      throw error;\n    }\n  };\n  return requestUrl;\n};\n_s(DataRequest, \"ubxFWKmhrBjtKh1Qqdw06/b/9/Y=\");\n_c = DataRequest;\nexport default DataRequest;\nvar _c;\n$RefreshReg$(_c, \"DataRequest\");","map":{"version":3,"names":["axios","useEffect","useState","DataRequest","url","_s","requestUrl","setRequestUrl","fetchPost","accessToken","localStorage","getItem","refreshToken","response","get","headers","status","postData","data","console","log","error","Error","_c","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/screens/product/DataRequest.js"],"sourcesContent":["import axios from \"../Request/RequestConfig\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst DataRequest = (url) => {\r\n\r\n    const [requestUrl,setRequestUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchPost();\r\n    }, []);\r\n\r\n    const fetchPost = async () => {\r\n        try {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n            // Fetch post using `id`\r\n            const response = await axios.get(`${url}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}`,\r\n                    'RefreshToken': `Bearer ${refreshToken}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                const postData = response.data;\r\n                console.log(postData.data);\r\n                setRequestUrl(postData);\r\n            } else {\r\n                console.error('게시글을 가져오는데 실패했습니다.');\r\n                throw new Error('게시글을 가져오는데 실패했습니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('인증되지 않은 사용자가 접근하려 합니다.', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    return requestUrl;\r\n}\r\n\r\nexport default DataRequest;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,0BAA0B;AAC5C,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,MAAMC,WAAW,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAEzB,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZO,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACvD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;;MAEzD;MACA,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAEV,GAAI,EAAC,EAAE;QACvCW,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASN,WAAY,EAAC;UACxC,cAAc,EAAG,UAASG,YAAa;QAC3C;MACJ,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QACzB,MAAMC,QAAQ,GAAGJ,QAAQ,CAACK,IAAI;QAC9BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;QAC1BX,aAAa,CAACU,QAAQ,CAAC;MAC3B,CAAC,MAAM;QACHE,OAAO,CAACE,KAAK,CAAC,oBAAoB,CAAC;QACnC,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACzC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,OAAOf,UAAU;AACrB,CAAC;AAAAD,EAAA,CArCKF,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAuCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}