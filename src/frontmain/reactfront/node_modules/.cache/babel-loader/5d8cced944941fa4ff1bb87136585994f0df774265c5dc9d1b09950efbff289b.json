{"ast":null,"code":"var _jsxFileName = \"C:\\\\OneDrive - 84913\\\\OneDrive\\\\study material\\\\workspace\\\\3.MACRO_STORE\\\\hjstore\\\\src\\\\frontmain\\\\reactfront\\\\src\\\\helpers\\\\renderFormFileInput.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleChange = (event, input, onImageChange) => {\n  event.preventDefault();\n  let imageFile = event.target.files[0];\n  if (imageFile) {\n    if (/\\.(jpe?g|png)$/i.test(imageFile === null || imageFile === void 0 ? void 0 : imageFile.name) === false) {\n      input.onChange(null);\n      onImageChange(null);\n      alert(\"Please select image file only!\");\n    } else {\n      var fileSize = imageFile.size / 1024 / 1024; // in MB\n      if (fileSize > 5) {\n        alert(`Photo size must be less or equal to 5MB. Your photo size is ${fileSize}`);\n      } else {\n        input.onChange(imageFile);\n        onImageChange(imageFile);\n      }\n    }\n  } else {\n    input.onChange(null);\n    onImageChange(null);\n  }\n};\nconst renderFileInput = props => {\n  const {\n    input,\n    onImageChange,\n    tips,\n    meta: {\n      touched,\n      error,\n      warning\n    }\n  } = props;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label d-none\",\n        htmlFor: input.name,\n        children: input.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"formFile\",\n        className: \"form-control form-control-sm\",\n        id: input.name,\n        accept: \"image/x-png,image/jpeg\",\n        onChange: event => handleChange(event, input, onImageChange),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [tips && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-text\",\n          children: tips\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }, this), touched && (error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this) || warning && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: warning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 27\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\nexport default renderFileInput;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","handleChange","event","input","onImageChange","preventDefault","imageFile","target","files","test","name","onChange","alert","fileSize","size","renderFileInput","props","tips","meta","touched","error","warning","Fragment","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","accept","required"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/helpers/renderFormFileInput.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst handleChange = (event, input, onImageChange) => {\r\n  event.preventDefault();\r\n  let imageFile = event.target.files[0];\r\n  if (imageFile) {\r\n    if (/\\.(jpe?g|png)$/i.test(imageFile?.name) === false) {\r\n      input.onChange(null);\r\n      onImageChange(null);\r\n      alert(\"Please select image file only!\");\r\n    } else {\r\n      var fileSize = imageFile.size / 1024 / 1024; // in MB\r\n      if (fileSize > 5) {\r\n        alert(\r\n          `Photo size must be less or equal to 5MB. Your photo size is ${fileSize}`\r\n        );\r\n      } else {\r\n        input.onChange(imageFile);\r\n        onImageChange(imageFile);\r\n      }\r\n    }\r\n  } else {\r\n    input.onChange(null);\r\n    onImageChange(null);\r\n  }\r\n};\r\n\r\nconst renderFileInput = (props) => {\r\n  const {\r\n    input,\r\n    onImageChange,\r\n    tips,\r\n    meta: { touched, error, warning },\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label d-none\" htmlFor={input.name}>{input.name}</label>\r\n        <input\r\n          type=\"file\"\r\n          name=\"formFile\"\r\n          className=\"form-control form-control-sm\"\r\n          id={input.name}\r\n          accept=\"image/x-png,image/jpeg\"\r\n          onChange={(event) => handleChange(event, input, onImageChange)}\r\n          required\r\n        />\r\n        <div className=\"d-flex\">\r\n          {tips && <div className=\"form-text\">{tips}</div>}\r\n          {touched &&\r\n            ((error && <div className=\"invalid-feedback\">{error}</div>) ||\r\n              (warning && <span>{warning}</span>))}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default renderFileInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}