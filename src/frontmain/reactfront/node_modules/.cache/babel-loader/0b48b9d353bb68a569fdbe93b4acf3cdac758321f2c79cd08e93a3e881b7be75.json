{"ast":null,"code":"var _jsxFileName = \"C:\\\\OneDrive - 84913\\\\OneDrive\\\\study material\\\\workspace\\\\3.MACRO_STORE\\\\hjstore\\\\src\\\\frontmain\\\\reactfront\\\\src\\\\components\\\\NextEditor\\\\QuillEditor.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuillEditor = _ref => {\n  _s();\n  let {\n    htmlStr,\n    setHtmlStr\n  } = _ref;\n  const quillRef = React.useRef(null);\n\n  // 이미지 업로드 핸들러, modules 설정보다 위에 있어야 정상 적용\n  const imageHandler = () => {\n    // file input 임의 생성\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.click();\n    input.onchange = async () => {\n      const file = input.files;\n      const formData = new FormData();\n      if (file) {\n        formData.append(\"multipartFiles\", file[0]);\n      }\n\n      // file 데이터 담아서 서버에 전달하여 이미지 업로드\n      const res = await axios.post('http://localhost:3005/manager/shop/save', formData);\n      if (quillRef.current) {\n        // 현재 Editor 커서 위치에 서버로부터 전달받은 이미지 불러오는 url을 이용하여 이미지 태그 추가\n        const index = quillRef.current.getEditor().getSelection().index;\n        const quillEditor = quillRef.current.getEditor();\n        quillEditor.setSelection(index, 1);\n        quillEditor.clipboard.dangerouslyPasteHTML(index, `<img src=${res.data} alt=${'alt text'} />`);\n      }\n    };\n  };\n\n  // useMemo를 사용하지 않고 handler를 등록할 경우 타이핑 할때마다 focus가 벗어남\n  const modules = React.useMemo(() => ({\n    toolbar: {\n      // container에 등록되는 순서대로 tool 배치\n      container: [[{\n        'font': []\n      }],\n      // font 설정\n      [{\n        'header': [1, 2, 3, 4, 5, 6, false]\n      }],\n      // header 설정\n      ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block', 'formula'],\n      // 굵기, 기울기, 밑줄 등 부가 tool 설정\n      [{\n        'list': 'ordered'\n      }, {\n        'list': 'bullet'\n      }, {\n        'indent': '-1'\n      }, {\n        'indent': '+1'\n      }],\n      // 리스트, 인덴트 설정\n      ['link', 'image', 'video'],\n      // 링크, 이미지, 비디오 업로드 설정\n      [{\n        'align': []\n      }, {\n        'color': []\n      }, {\n        'background': []\n      }],\n      // 정렬, 글씨 색깔, 글씨 배경색 설정\n      ['clean'] // toolbar 설정 초기화 설정\n      ],\n\n      // custom 핸들러 설정\n      handlers: {\n        image: imageHandler // 이미지 tool 사용에 대한 핸들러 설정\n      }\n    }\n  }), []);\n\n  // toolbar에 사용되는 tool format\n  const formats = ['font', 'header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block', 'formula', 'list', 'bullet', 'indent', 'link', 'image', 'video', 'align', 'color', 'background'];\n  return /*#__PURE__*/_jsxDEV(CustomReactQuill, {\n    ref: quillRef,\n    theme: \"snow\",\n    modules: modules,\n    formats: formats,\n    value: htmlStr,\n    placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n    onChange: (content, delta, source, editor) => setHtmlStr(editor.getHTML())\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(QuillEditor, \"En3KIhU47UXH1knXzSz9t0Z/4RA=\");\n_c = QuillEditor;\nexport default QuillEditor;\n\n// style\nconst CustomReactQuill = styled(ReactQuill)`\n    height: 300px;\n`;\n_c2 = CustomReactQuill;\nvar _c, _c2;\n$RefreshReg$(_c, \"QuillEditor\");\n$RefreshReg$(_c2, \"CustomReactQuill\");","map":{"version":3,"names":["React","styled","axios","ReactQuill","jsxDEV","_jsxDEV","QuillEditor","_ref","_s","htmlStr","setHtmlStr","quillRef","useRef","imageHandler","input","document","createElement","setAttribute","click","onchange","file","files","formData","FormData","append","res","post","current","index","getEditor","getSelection","quillEditor","setSelection","clipboard","dangerouslyPasteHTML","data","modules","useMemo","toolbar","container","handlers","image","formats","CustomReactQuill","ref","theme","value","placeholder","onChange","content","delta","source","editor","getHTML","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/components/NextEditor/QuillEditor.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { NextPage } from 'next';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { RangeStatic } from 'quill'\r\n\r\ninterface IEditor {\r\n    htmlStr: string;\r\n    setHtmlStr: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst QuillEditor: NextPage<IEditor> = ({ htmlStr, setHtmlStr}) => {\r\n\r\n    const quillRef = React.useRef<ReactQuill>(null);\r\n\r\n    // 이미지 업로드 핸들러, modules 설정보다 위에 있어야 정상 적용\r\n    const imageHandler = () => {\r\n        // file input 임의 생성\r\n        const input = document.createElement('input');\r\n        input.setAttribute('type', 'file');\r\n        input.click();\r\n\r\n        input.onchange = async() => {\r\n            const file = input.files;\r\n            const formData = new FormData();\r\n\r\n            if(file) {\r\n                formData.append(\"multipartFiles\", file[0]);\r\n            }\r\n\r\n            // file 데이터 담아서 서버에 전달하여 이미지 업로드\r\n            const res = await axios.post('http://localhost:3005/manager/shop/save', formData);\r\n\r\n            if(quillRef.current) {\r\n                // 현재 Editor 커서 위치에 서버로부터 전달받은 이미지 불러오는 url을 이용하여 이미지 태그 추가\r\n                const index = (quillRef.current.getEditor().getSelection() as RangeStatic).index;\r\n\r\n                const quillEditor = quillRef.current.getEditor();\r\n                quillEditor.setSelection(index, 1);\r\n\r\n                quillEditor.clipboard.dangerouslyPasteHTML(\r\n                    index,\r\n                    `<img src=${res.data} alt=${'alt text'} />`\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    // useMemo를 사용하지 않고 handler를 등록할 경우 타이핑 할때마다 focus가 벗어남\r\n    const modules = React.useMemo(() => ({\r\n            toolbar: {\r\n                // container에 등록되는 순서대로 tool 배치\r\n                container: [\r\n                    [{ 'font': [] }], // font 설정\r\n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }], // header 설정\r\n                    ['bold', 'italic', 'underline','strike', 'blockquote', 'code-block', 'formula'], // 굵기, 기울기, 밑줄 등 부가 tool 설정\r\n                    [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}], // 리스트, 인덴트 설정\r\n                    ['link', 'image', 'video'], // 링크, 이미지, 비디오 업로드 설정\r\n                    [{ 'align': [] }, { 'color': [] }, { 'background': [] }], // 정렬, 글씨 색깔, 글씨 배경색 설정\r\n                    ['clean'], // toolbar 설정 초기화 설정\r\n                ],\r\n\r\n                // custom 핸들러 설정\r\n                handlers: {\r\n                    image: imageHandler, // 이미지 tool 사용에 대한 핸들러 설정\r\n                }\r\n            },\r\n        }\r\n    ), [])\r\n\r\n    // toolbar에 사용되는 tool format\r\n    const formats = [\r\n        'font',\r\n        'header',\r\n        'bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block', 'formula',\r\n        'list', 'bullet', 'indent',\r\n        'link', 'image', 'video',\r\n        'align', 'color', 'background',\r\n    ]\r\n\r\n    return (\r\n        <CustomReactQuill\r\n            ref={quillRef}\r\n            theme=\"snow\"\r\n            modules={modules}\r\n            formats={formats}\r\n            value={htmlStr}\r\n            placeholder='내용을 입력하세요.'\r\n            onChange={(content, delta, source, editor) => setHtmlStr(editor.getHTML())} />\r\n    )\r\n}\r\n\r\nexport default QuillEditor;\r\n\r\n// style\r\nconst CustomReactQuill = styled(ReactQuill)`\r\n    height: 300px;\r\n`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}