{"ast":null,"code":"var _jsxFileName = \"C:\\\\OneDrive - 84913\\\\OneDrive\\\\study material\\\\workspace\\\\3.MACRO_STORE\\\\hjstore\\\\src\\\\frontmain\\\\reactfront\\\\src\\\\screens\\\\Board\\\\DetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Card } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../Request/RequestConfig.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Detail() {\n  _s();\n  const [loginError, setLoginError] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const navigate = useNavigate();\n  const handleGoBack = () => {\n    navigate(-1); // 뒤로가기 버튼을 누를 때 이전 페이지로 이동\n  };\n\n  // 게시글 ID를 URL 파라미터로부터 추출합니다.\n  const {\n    id\n  } = useParams();\n  const fetchPost = async () => {\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n      console.log(accessToken);\n      console.log(refreshToken);\n      if (accessToken && refreshToken) {\n        const response = await axios.get(`/auth/shop/${id}`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${accessToken}`,\n            'RefreshToken': `Bearer ${refreshToken}`\n          }\n        });\n        if (response.status == 200) {\n          const postData = await response.data;\n          console.log(postData.data);\n          setTitle(postData.data.title);\n          setContent(postData.data.content);\n        } else {\n          console.error('게시글을 가져오는데 실패했습니다.');\n        }\n      } else {\n        setLoginError('인증되지않은 유저는 접근할 수 없습니다.'); // 로그인되지 않은 경우 처리\n      }\n    } catch (error) {\n      console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\n      setLoginError('인증된 유저만 접근 가능합니다.');\n    }\n  };\n  useEffect(() => {\n    fetchPost(); // 컴포넌트가 마운트될 때(fetchPost()의 의존성 배열이 빈 배열) fetchPost 함수를 호출합니다.\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      marginTop: '50px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoBack,\n        style: {\n          position: 'absolute',\n          left: '10px',\n          top: '70px'\n        },\n        children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        border: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          style: {\n            height: 'calc(8vh - 10px)',\n            fontSize: '30px'\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          style: {\n            height: 'calc(100vh - 50px)'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            dangerouslySetInnerHTML: {\n              __html: content\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Detail, \"C/N9ztAu3/YscnSaFp2wOym2z2U=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Container","Card","useNavigate","axios","jsxDEV","_jsxDEV","Detail","_s","loginError","setLoginError","title","setTitle","content","setContent","navigate","handleGoBack","id","fetchPost","accessToken","localStorage","getItem","refreshToken","console","log","response","get","headers","status","postData","data","error","style","height","marginTop","children","fluid","onClick","position","left","top","fileName","_jsxFileName","lineNumber","columnNumber","border","Header","fontSize","Body","Text","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/screens/Board/DetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from '../Request/RequestConfig.js';\r\n\r\n\r\n\r\nexport default function Detail() {\r\n    const [loginError, setLoginError] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1); // 뒤로가기 버튼을 누를 때 이전 페이지로 이동\r\n    };\r\n\r\n\r\n    // 게시글 ID를 URL 파라미터로부터 추출합니다.\r\n    const { id } = useParams();\r\n\r\n    const fetchPost = async () => {\r\n        try {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n            console.log(accessToken);\r\n            console.log(refreshToken);\r\n\r\n            if (accessToken && refreshToken) {\r\n                const response = await axios.get(`/auth/shop/${id}`, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${accessToken}`,\r\n                        'RefreshToken': `Bearer ${refreshToken}`,\r\n                    },\r\n                });\r\n\r\n                if (response.status == 200) {\r\n                    const postData = await response.data;\r\n                    console.log(postData.data);\r\n                    setTitle(postData.data.title);\r\n                    setContent(postData.data.content);\r\n                } else {\r\n                    console.error('게시글을 가져오는데 실패했습니다.');\r\n                }\r\n            } else {\r\n                setLoginError('인증되지않은 유저는 접근할 수 없습니다.'); // 로그인되지 않은 경우 처리\r\n            }\r\n        } catch (error) {\r\n            console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\r\n            setLoginError('인증된 유저만 접근 가능합니다.');\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchPost(); // 컴포넌트가 마운트될 때(fetchPost()의 의존성 배열이 빈 배열) fetchPost 함수를 호출합니다.\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ height: '100vh', marginTop: '50px' }}>\r\n            <Container fluid>\r\n                <button onClick={handleGoBack} style={{ position: 'absolute', left: '10px', top: '70px' }}>\r\n                    뒤로가기\r\n                </button>\r\n                <Card border=\"primary\">\r\n                    <Card.Header style={{ height: 'calc(8vh - 10px)', fontSize: '30px' }}>{title}</Card.Header>\r\n                    <Card.Body style={{ height: 'calc(100vh - 50px)' }}>\r\n                        <Card.Text dangerouslySetInnerHTML={{ __html: content }} />\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}