{"ast":null,"code":"import _regeneratorRuntime from\"C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Login}from\"../Styles/Loginform/Login.style\";import{useNavigate,useLocation}from'react-router-dom';import axios from'../Request/RequestConfig.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginPage=function LoginPage(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),loginError=_useState6[0],setLoginError=_useState6[1];var navigate=useNavigate();var location=useLocation();var handleLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,accessToken,refreshToken,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post('/login',JSON.stringify({email:email,password:password}),{headers:{'Content-Type':'application/json'}});case 3:response=_context.sent;if(!(response.status==200)){_context.next=19;break;}// 로그인 성공 시 처리할 작업\naccessToken=response.headers.get('access-token');refreshToken=response.headers.get('refresh-token');console.log(accessToken);_context.next=10;return response.data;case 10:data=_context.sent;console.log(JSON.stringify(data));// JSON 형태로 String형태로 출력\nconsole.log(data.data.username);// 로그인 정보 저장\nsessionStorage.setItem('userData',JSON.stringify(data.data));// 액세스 토큰과 리프레시 토큰을 localStorage에 저장\nlocalStorage.setItem('accessToken',accessToken);localStorage.setItem('refreshToken',refreshToken);//gamja@gmail.com\nnavigate('/shop');_context.next=20;break;case 19:// 로그인 실패 시 처리할 작업\nsetLoginError('로그인에 실패했습니다. 다시 시도해주세요.');case 20:_context.next=26;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](0);console.error('로그인 요청 중 오류가 발생했습니다.',_context.t0);setLoginError('로그인 요청 중 오류가 발생했습니다.');case 26:case\"end\":return _context.stop();}},_callee,null,[[0,22]]);}));return function handleLogin(){return _ref.apply(this,arguments);};}();var handleJoin=function handleJoin(){navigate('/join');};return/*#__PURE__*/_jsxs(Login,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleJoin,children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]});};export default LoginPage;","map":{"version":3,"names":["React","useState","Login","useNavigate","useLocation","axios","jsx","_jsx","jsxs","_jsxs","LoginPage","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loginError","setLoginError","navigate","location","handleLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","accessToken","refreshToken","data","wrap","_callee$","_context","prev","next","post","JSON","stringify","headers","sent","status","get","console","log","username","sessionStorage","setItem","localStorage","t0","error","stop","apply","arguments","handleJoin","children","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/components/Login/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {Login} from \"../Styles/Loginform/Login.style\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from '../Request/RequestConfig.js';\r\n\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginError, setLoginError] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            const response = await axios.post('/login', JSON.stringify({ email, password }), {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (response.status == 200) {\r\n                // 로그인 성공 시 처리할 작업\r\n                const accessToken = response.headers.get('access-token');\r\n                const refreshToken = response.headers.get('refresh-token');\r\n\r\n                console.log(accessToken);\r\n\r\n                const data = await response.data;\r\n                console.log(JSON.stringify(data)); // JSON 형태로 String형태로 출력\r\n                console.log(data.data.username);\r\n\r\n\r\n\r\n                // 로그인 정보 저장\r\n                sessionStorage.setItem('userData', JSON.stringify(data.data));\r\n\r\n                // 액세스 토큰과 리프레시 토큰을 localStorage에 저장\r\n                localStorage.setItem('accessToken', accessToken);\r\n                localStorage.setItem('refreshToken', refreshToken);\r\n\r\n                //gamja@gmail.com\r\n                navigate('/shop');\r\n\r\n            } else {\r\n                // 로그인 실패 시 처리할 작업\r\n                setLoginError('로그인에 실패했습니다. 다시 시도해주세요.');\r\n            }\r\n        } catch (error) {\r\n            console.error('로그인 요청 중 오류가 발생했습니다.', error);\r\n            setLoginError('로그인 요청 중 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    const handleJoin = () => {\r\n        navigate('/join')\r\n    }\r\n\r\n\r\n    return (\r\n        <Login>\r\n            <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={handleLogin}>로그인</button>\r\n            <button onClick={handleJoin}>회원가입</button>\r\n        </Login>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}