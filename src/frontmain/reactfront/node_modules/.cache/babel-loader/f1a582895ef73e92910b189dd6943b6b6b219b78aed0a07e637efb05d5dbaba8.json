{"ast":null,"code":"var _jsxFileName = \"C:\\\\OneDrive - 84913\\\\OneDrive\\\\study material\\\\workspace\\\\3.MACRO_STORE\\\\hjstore\\\\src\\\\frontmain\\\\reactfront\\\\src\\\\components\\\\Board\\\\ImageLibrary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, Button, Dropdown } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport { Editor } from '../Styles/Editorform/Editor.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageLibrary = _ref => {\n  _s();\n  let {\n    imageSrc\n  } = _ref;\n  const [urls, setUrls] = useState([]);\n  const [updatedDomArray, setUpdatedDomArray] = useState([]);\n  useEffect(() => {\n    if (Array.isArray(imageSrc)) {\n      setUrls(prevUrls => [...prevUrls, ...imageSrc]);\n    } else if (typeof imageSrc === 'string') {\n      setUrls(prevUrls => [...prevUrls, imageSrc]);\n    }\n  }, [imageSrc]);\n  useEffect(() => {\n    const domArray = urls.map((url, index) => {\n      const itemIndex = index + 1;\n      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        as: \"li\",\n        draggable: \"true\",\n        \"data-log\": \"lib.diplomat\",\n        \"data-index\": itemIndex,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              style: {\n                width: '3rem',\n                fontSize: '11px'\n              },\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, itemIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    });\n    setUpdatedDomArray(domArray);\n  }, [urls]);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    show: dropdownOpen,\n    onToggle: toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"primary\",\n      id: \"dropdown-basic-button\",\n      children: \"\\uC0AC\\uC9C4 \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      show: true,\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          as: \"ul\",\n          className: \"se-sidebar-list\",\n          children: updatedDomArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageLibrary, \"P4apEAdbOHzFYLAn1mAdoTeufC4=\");\n_c = ImageLibrary;\nexport default ImageLibrary;\nvar _c;\n$RefreshReg$(_c, \"ImageLibrary\");","map":{"version":3,"names":["React","useState","useEffect","ListGroup","Button","Dropdown","Card","Editor","jsxDEV","_jsxDEV","ImageLibrary","_ref","_s","imageSrc","urls","setUrls","updatedDomArray","setUpdatedDomArray","Array","isArray","prevUrls","domArray","map","url","index","itemIndex","Item","as","draggable","children","style","width","Img","variant","src","fileName","_jsxFileName","lineNumber","columnNumber","Body","fontSize","dropdownOpen","setDropdownOpen","toggleDropdown","show","onToggle","Toggle","id","Menu","align","className","_c","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/components/Board/ImageLibrary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ListGroup, Button, Dropdown } from 'react-bootstrap';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Editor } from '../Styles/Editorform/Editor.style';\r\n\r\nconst ImageLibrary = ({ imageSrc }) => {\r\n    const [urls, setUrls] = useState([]);\r\n    const [updatedDomArray, setUpdatedDomArray] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(imageSrc)) {\r\n            setUrls(prevUrls => [...prevUrls, ...imageSrc]);\r\n        } else if (typeof imageSrc === 'string') {\r\n            setUrls(prevUrls => [...prevUrls, imageSrc]);\r\n        }\r\n    }, [imageSrc]);\r\n\r\n    useEffect(() => {\r\n        const domArray = urls.map((url, index) => {\r\n            const itemIndex = index + 1;\r\n            return (\r\n                <ListGroup.Item\r\n                    as=\"li\"\r\n                    draggable=\"true\"\r\n                    data-log=\"lib.diplomat\"\r\n                    data-index={itemIndex}\r\n                    key={itemIndex}\r\n                >\r\n                    <Card style={{ width: '5rem' }}>\r\n                        <Card.Img variant=\"top\" src={url} />\r\n                        <Card.Body>\r\n                            <Button variant=\"primary\" style={{ width: '3rem', fontSize: '11px' }}>\r\n                                삭제\r\n                            </Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </ListGroup.Item>\r\n            );\r\n        });\r\n\r\n        setUpdatedDomArray(domArray);\r\n    }, [urls]);\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggleDropdown = () => {\r\n        setDropdownOpen(!dropdownOpen);\r\n    };\r\n\r\n    return (\r\n        <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\r\n            <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic-button\">\r\n                사진 라이브러리\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu show={true} align=\"right\">\r\n                <Editor>\r\n                    <ListGroup as=\"ul\" className=\"se-sidebar-list\">\r\n                        {updatedDomArray}\r\n                    </ListGroup>\r\n                </Editor>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n};\r\n\r\nexport default ImageLibrary;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}