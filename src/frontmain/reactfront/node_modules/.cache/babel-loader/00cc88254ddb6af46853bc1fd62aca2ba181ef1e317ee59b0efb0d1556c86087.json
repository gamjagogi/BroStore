{"ast":null,"code":"import axios from \"../Request/RequestConfig\";\nimport { useEffect, useState } from \"react\";\nconst DataRequest = async url => {\n  console.log(\"진입\");\n  console.log(url);\n\n  //const [requestData,setRequestData] = useState([]);\n\n  // useEffect(() => {\n  //     console.log(\"useEffect시작\");\n  //     fetchPost().then((postData) => {\n  //         console.log(postData.data);\n  //         setRequestData(postData);\n  //     })\n  // }, []);\n\n  try {\n    console.log('fetch시작');\n    const accessToken = localStorage.getItem('accessToken');\n    const refreshToken = localStorage.getItem('refreshToken');\n\n    // Fetch post using `id`\n    const response = await axios.get(`${url}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`,\n        'RefreshToken': `Bearer ${refreshToken}`\n      }\n    });\n    if (response.status === 200) {\n      const postData = response.data;\n      console.log(postData.data);\n      return postData;\n    } else {\n      console.error('게시글을 가져오는데 실패했습니다.');\n      throw new Error('게시글을 가져오는데 실패했습니다.');\n    }\n  } catch (error) {\n    console.error('인증되지 않은 사용자가 접근하려 합니다.', error);\n    throw error;\n  }\n};\n_c = DataRequest;\nexport default DataRequest;\nvar _c;\n$RefreshReg$(_c, \"DataRequest\");","map":{"version":3,"names":["axios","useEffect","useState","DataRequest","url","console","log","accessToken","localStorage","getItem","refreshToken","response","get","headers","status","postData","data","error","Error","_c","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/screens/product/DataRequest.js"],"sourcesContent":["import axios from \"../Request/RequestConfig\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst DataRequest = async (url) => {\r\n\r\n    console.log(\"진입\");\r\n    console.log(url)\r\n\r\n    //const [requestData,setRequestData] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"useEffect시작\");\r\n    //     fetchPost().then((postData) => {\r\n    //         console.log(postData.data);\r\n    //         setRequestData(postData);\r\n    //     })\r\n    // }, []);\r\n\r\n        try {\r\n            console.log('fetch시작');\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n            // Fetch post using `id`\r\n            const response = await axios.get(`${url}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}`,\r\n                    'RefreshToken': `Bearer ${refreshToken}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                const postData = response.data;\r\n                console.log(postData.data);\r\n\r\n                return postData;\r\n            } else {\r\n                console.error('게시글을 가져오는데 실패했습니다.');\r\n                throw new Error('게시글을 가져오는데 실패했습니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('인증되지 않은 사용자가 접근하려 합니다.', error);\r\n            throw error;\r\n        }\r\n}\r\n\r\nexport default DataRequest;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,0BAA0B;AAC5C,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,MAAMC,WAAW,GAAG,MAAOC,GAAG,IAAK;EAE/BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACjBD,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;;EAEhB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACvD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;;IAEzD;IACA,MAAME,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAER,GAAI,EAAC,EAAE;MACvCS,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASN,WAAY,EAAC;QACxC,cAAc,EAAG,UAASG,YAAa;MAC3C;IACJ,CAAC,CAAC;IAEF,IAAIC,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;MACzB,MAAMC,QAAQ,GAAGJ,QAAQ,CAACK,IAAI;MAC9BX,OAAO,CAACC,GAAG,CAACS,QAAQ,CAACC,IAAI,CAAC;MAE1B,OAAOD,QAAQ;IACnB,CAAC,MAAM;MACHV,OAAO,CAACY,KAAK,CAAC,oBAAoB,CAAC;MACnC,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACzC;EACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZZ,OAAO,CAACY,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACR,CAAC;AAAAE,EAAA,GA1CKhB,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}