{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container } from \"../../components/Styles/Container/Container.style\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Pagination from 'react-bootstrap/Pagination';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport axios from '../Request/RequestConfig.js';\nimport software from \"../Board/UserBoard\";\nconst SoftwareData = () => {\n  _s();\n  const [softData, setSoftData] = useState([]);\n  const [loginError, setLoginError] = useState('');\n  const [boardPG, setBoardPG] = useState({\n    content: []\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const DataList = (data, currentPage, pageSize) => {\n    return data.map(contentList => {\n      const newData = {\n        id: contentList.content.id,\n        sku: \"FAS-01\",\n        link: contentList.content.link,\n        title: contentList.content.title,\n        img: contentList.content.thumbnail,\n        price: contentList.content.price,\n        originPrice: contentList.content.originPrice,\n        discountPrice: contentList.content.discountPrice,\n        discountPercentage: contentList.content.discountPercentage,\n        isNew: contentList.content.isNew,\n        isHot: contentList.content.isHot,\n        star: contentList.content.star,\n        isFreeShipping: contentList.content.deliveryState,\n        description: contentList.content.content\n      };\n      setSoftData(prevData => [...prevData, newData]);\n    });\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    handlePage();\n  }, [currentPage]);\n  const handlePage = async () => {\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (accessToken && refreshToken) {\n        const response = await axios.get(`/auth/shop?page=${currentPage - 1}`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${accessToken}`,\n            'RefreshToken': `Bearer ${refreshToken}`\n          }\n        });\n        if (response.status == 200) {\n          const data = await response.data;\n          setBoardPG(data.data);\n          softwareDatas(data.data);\n        } else {\n          setLoginError('인증된 유저만 접근 가능합니다.');\n        }\n      } else {\n        setLoginError('로그인이 필요합니다.');\n      }\n    } catch (error) {\n      console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\n      setLoginError('인증된 유저만 접근 가능합니다.');\n    }\n  };\n  return;\n};\n_s(SoftwareData, \"OugIaq2JINTTD0Arg/9MmklFVVg=\", false, function () {\n  return [useNavigate];\n});\n_c = SoftwareData;\nexport default SoftwareData;\nvar _c;\n$RefreshReg$(_c, \"SoftwareData\");","map":{"version":3,"names":["React","useState","useEffect","Container","useLocation","useNavigate","Pagination","ListGroup","Image","axios","software","SoftwareData","_s","softData","setSoftData","loginError","setLoginError","boardPG","setBoardPG","content","currentPage","setCurrentPage","DataList","data","pageSize","map","contentList","newData","id","sku","link","title","img","thumbnail","price","originPrice","discountPrice","discountPercentage","isNew","isHot","star","isFreeShipping","deliveryState","description","prevData","navigate","handlePage","accessToken","localStorage","getItem","refreshToken","response","get","headers","status","softwareDatas","error","console","_c","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/screens/product/SoftwareData.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Container} from \"../../components/Styles/Container/Container.style\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Image from 'react-bootstrap/Image';\r\nimport axios from '../Request/RequestConfig.js';\r\nimport software from \"../Board/UserBoard\";\r\n\r\n\r\n\r\nconst SoftwareData = () => {\r\n    const [softData, setSoftData] = useState([]);\r\n    const [loginError, setLoginError] = useState('');\r\n    const [boardPG, setBoardPG] = useState({content: []});\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    const DataList = ((data,currentPage,pageSize) => {\r\n        return data.map((contentList) => {\r\n            const newData = {\r\n                id: contentList.content.id,\r\n                sku: \"FAS-01\",\r\n                link: contentList.content.link,\r\n                title: contentList.content.title,\r\n                img: contentList.content.thumbnail,\r\n                price: contentList.content.price,\r\n                originPrice: contentList.content.originPrice,\r\n                discountPrice: contentList.content.discountPrice,\r\n                discountPercentage: contentList.content.discountPercentage,\r\n                isNew: contentList.content.isNew,\r\n                isHot: contentList.content.isHot,\r\n                star: contentList.content.star,\r\n                isFreeShipping: contentList.content.deliveryState,\r\n                description: contentList.content.content\r\n            };\r\n            setSoftData(prevData => [...prevData, newData]);\r\n        })\r\n\r\n    });\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        handlePage();\r\n    }, [currentPage]);\r\n\r\n    const handlePage = async () => {\r\n        try {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n            if (accessToken && refreshToken) {\r\n                const response = await axios.get(`/auth/shop?page=${currentPage - 1}`, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${accessToken}`,\r\n                        'RefreshToken': `Bearer ${refreshToken}`,\r\n                    },\r\n                });\r\n\r\n                if (response.status == 200) {\r\n                    const data = await response.data;\r\n                    setBoardPG(data.data);\r\n                    softwareDatas(data.data);\r\n                } else {\r\n                    setLoginError('인증된 유저만 접근 가능합니다.');\r\n                }\r\n            } else {\r\n                setLoginError('로그인이 필요합니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\r\n            setLoginError('인증된 유저만 접근 가능합니다.');\r\n        }\r\n    };\r\n\r\n    return\r\n}\r\n\r\nexport default SoftwareData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}