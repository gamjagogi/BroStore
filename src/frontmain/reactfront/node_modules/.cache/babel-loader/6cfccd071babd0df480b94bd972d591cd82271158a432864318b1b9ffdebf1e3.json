{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container } from \"../../components/Styles/Container/Container.style\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Pagination from 'react-bootstrap/Pagination';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport axios from '../Request/RequestConfig.js';\nimport software from \"../Board/UserBoard\";\nconst SoftwareData = async () => {\n  _s();\n  const [loginError, setLoginError] = useState('');\n  const [boardPG, setBoardPG] = useState({\n    content: []\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n  const boardData = (productList, currentPage, pageSize) => {\n    return productList.map(currentProduct => {\n      const newData = {\n        id: currentProduct.id,\n        sku: \"FAS-01\",\n        link: currentProduct.link,\n        title: currentProduct.title,\n        img: currentProduct.content.thumbnail,\n        price: currentProduct.content.price,\n        originPrice: currentProduct.content.originPrice,\n        discountPrice: currentProduct.content.discountPrice,\n        discountPercentage: currentProduct.content.discountPercentage,\n        isNew: currentProduct.content.isNew,\n        isHot: currentProduct.content.isHot,\n        star: currentProduct.content.star,\n        isFreeShipping: currentProduct.content.deliveryService,\n        description: currentProduct.content.content\n      };\n      setBoardPG(prevData => [...prevData, newData]);\n    });\n  };\n  try {\n    const accessToken = localStorage.getItem('accessToken');\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (accessToken && refreshToken) {\n      const response = await axios.get(`/auth/shop?page=${currentPage - 1}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`,\n          'RefreshToken': `Bearer ${refreshToken}`\n        }\n      });\n      if (response.status == 200) {\n        const data = await response.data;\n        boardData(data.data);\n      } else {\n        setLoginError('인증된 유저만 접근 가능합니다.');\n      }\n    } else {\n      setLoginError('로그인이 필요합니다.');\n    }\n  } catch (error) {\n    console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\n    setLoginError('인증된 유저만 접근 가능합니다.');\n  }\n  return boardPG;\n};\n_s(SoftwareData, \"Nh+xW2Es75yzKJYfEF7TYZ+U9Aw=\", false, function () {\n  return [useNavigate];\n});\n_c = SoftwareData;\nexport default SoftwareData;\nvar _c;\n$RefreshReg$(_c, \"SoftwareData\");","map":{"version":3,"names":["React","useState","useEffect","Container","useLocation","useNavigate","Pagination","ListGroup","Image","axios","software","SoftwareData","_s","loginError","setLoginError","boardPG","setBoardPG","content","currentPage","setCurrentPage","navigate","boardData","productList","pageSize","map","currentProduct","newData","id","sku","link","title","img","thumbnail","price","originPrice","discountPrice","discountPercentage","isNew","isHot","star","isFreeShipping","deliveryService","description","prevData","accessToken","localStorage","getItem","refreshToken","response","get","headers","status","data","error","console","_c","$RefreshReg$"],"sources":["C:/OneDrive - 84913/OneDrive/study material/workspace/3.MACRO_STORE/hjstore/src/frontmain/reactfront/src/screens/product/SoftwareData.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Container} from \"../../components/Styles/Container/Container.style\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Image from 'react-bootstrap/Image';\r\nimport axios from '../Request/RequestConfig.js';\r\nimport software from \"../Board/UserBoard\";\r\n\r\n\r\n\r\nconst SoftwareData = async () => {\r\n    const [loginError, setLoginError] = useState('');\r\n    const [boardPG, setBoardPG] = useState({content: []});\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const navigate = useNavigate();\r\n\r\n    const boardData = ((productList, currentPage, pageSize) => {\r\n        return productList.map((currentProduct) => {\r\n            const newData = {\r\n                id: currentProduct.id,\r\n                sku: \"FAS-01\",\r\n                link: currentProduct.link,\r\n                title: currentProduct.title,\r\n                img: currentProduct.content.thumbnail,\r\n                price: currentProduct.content.price,\r\n                originPrice: currentProduct.content.originPrice,\r\n                discountPrice: currentProduct.content.discountPrice,\r\n                discountPercentage: currentProduct.content.discountPercentage,\r\n                isNew: currentProduct.content.isNew,\r\n                isHot: currentProduct.content.isHot,\r\n                star: currentProduct.content.star,\r\n                isFreeShipping: currentProduct.content.deliveryService,\r\n                description: currentProduct.content.content\r\n            };\r\n            setBoardPG(prevData => [...prevData, newData]);\r\n        })\r\n    });\r\n\r\n    try {\r\n        const accessToken = localStorage.getItem('accessToken');\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n        if (accessToken && refreshToken) {\r\n            const response = await axios.get(`/auth/shop?page=${currentPage - 1}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}`,\r\n                    'RefreshToken': `Bearer ${refreshToken}`,\r\n                },\r\n            });\r\n\r\n            if (response.status == 200) {\r\n                const data = await response.data;\r\n                boardData(data.data);\r\n            } else {\r\n                setLoginError('인증된 유저만 접근 가능합니다.');\r\n            }\r\n        } else {\r\n            setLoginError('로그인이 필요합니다.');\r\n        }\r\n    } catch (error) {\r\n        console.error('인증되지 않은 사용자가 접근하려 합니다..', error);\r\n        setLoginError('인증된 유저만 접근 가능합니다.');\r\n    }\r\n    return boardPG;\r\n}\r\n\r\nexport default SoftwareData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}