{"version":3,"file":"src_screens_userBoard_UserBoard_js.main.js","mappings":"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","sources":["webpack://reactfront/./src/components/Paging.jsx","webpack://reactfront/./src/components/Styles/Container/Container.style.js","webpack://reactfront/./src/screens/userBoard/UserBoard.js","webpack://reactfront/./node_modules/react-bootstrap/esm/Image.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst Paging = (props) => {\r\n  const {\r\n    totalRecords = null,\r\n    pageLimit = 30,\r\n    pageNeighbours = 0,\r\n    sizing = \"\",\r\n    alignment = \"\",\r\n    onPageChanged = () => {},\r\n  } = props;\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const totalPages = Math.ceil(totalRecords / pageLimit);\r\n\r\n  useEffect(() => {\r\n    gotoPage(1);\r\n  }, []);\r\n\r\n  const gotoPage = (page) => {\r\n    const validPage = Math.max(1, Math.min(page, totalPages));\r\n    setCurrentPage(validPage);\r\n    onPageChanged({\r\n      currentPage: validPage,\r\n      totalPages,\r\n      pageLimit,\r\n      totalRecords,\r\n    });\r\n  };\r\n\r\n  const handleClick = (page, evt) => {\r\n    evt.preventDefault();\r\n    gotoPage(page);\r\n  };\r\n\r\n  const handleMoveLeft = (evt) => {\r\n    evt.preventDefault();\r\n    gotoPage(currentPage - pageNeighbours * 2 - 1);\r\n  };\r\n\r\n  const handleMoveRight = (evt) => {\r\n    evt.preventDefault();\r\n    gotoPage(currentPage + pageNeighbours * 2 + 1);\r\n  };\r\n\r\n  const fetchPageNumbers = () => {\r\n    const totalNumbers = pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      let pages = [];\r\n\r\n      const leftBound = currentPage - pageNeighbours;\r\n      const rightBound = currentPage + pageNeighbours;\r\n      const beforeLastPage = totalPages - 1;\r\n\r\n      const startPage = leftBound > 2 ? leftBound : 2;\r\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n      pages = range(startPage, endPage);\r\n\r\n      const pagesCount = pages.length;\r\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n      const leftSpill = startPage > 2;\r\n      const rightSpill = endPage < beforeLastPage;\r\n\r\n      const leftSpillPage = LEFT_PAGE;\r\n      const rightSpillPage = RIGHT_PAGE;\r\n\r\n      if (leftSpill && !rightSpill) {\r\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n        pages = [leftSpillPage, ...extraPages, ...pages];\r\n      } else if (!leftSpill && rightSpill) {\r\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n        pages = [...pages, ...extraPages, rightSpillPage];\r\n      } else if (leftSpill && rightSpill) {\r\n        pages = [leftSpillPage, ...pages, rightSpillPage];\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n    }\r\n\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  if (!totalRecords || totalPages === 1) return null;\r\n\r\n  const pages = fetchPageNumbers();\r\n\r\n  return (\r\n      <nav aria-label=\"Page navigation\">\r\n        <ul className={`pagination ${sizing} ${alignment}`}>\r\n          {pages.map((page, index) => {\r\n            if (page === LEFT_PAGE)\r\n              return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <button\r\n                        className=\"page-link\"\r\n                        aria-label=\"Previous\"\r\n                        onClick={handleMoveLeft}\r\n                    >\r\n                      <span aria-hidden=\"true\">&laquo;</span>\r\n                      <span className=\"sr-only\">Previous</span>\r\n                    </button>\r\n                  </li>\r\n              );\r\n\r\n            if (page === RIGHT_PAGE)\r\n              return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                        className=\"page-link\"\r\n                        href=\"#!\"\r\n                        aria-label=\"Next\"\r\n                        onClick={handleMoveRight}\r\n                    >\r\n                      <span aria-hidden=\"true\">&raquo;</span>\r\n                      <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                  </li>\r\n              );\r\n\r\n            return (\r\n                <li\r\n                    key={index}\r\n                    className={`page-item${currentPage === page ? \" active\" : \"\"}`}\r\n                >\r\n                  <a\r\n                      className=\"page-link\"\r\n                      href=\"#!\"\r\n                      onClick={(e) => handleClick(page, e)}\r\n                  >\r\n                    {page}\r\n                  </a>\r\n                </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </nav>\r\n  );\r\n};\r\n\r\nPaging.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func,\r\n  sizing: PropTypes.string,\r\n};\r\n\r\nexport default React.memo(Paging);\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n`\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Container} from \"../../components/Styles/Container/Container.style\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Image from 'react-bootstrap/Image';\r\nimport axios from '../Request/RequestConfig.js';\r\nimport Paging from \"../../components/Paging\";\r\nimport DeliveryCategoryConfig from \"../deliveryProductPage/category/DeliveryCategoryConfig\";\r\n\r\n\r\nconst UserBoard = () => {\r\n    const [loginError, setLoginError] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentProducts, setCurrentProducts] = useState([]);\r\n    const [totalPages, setTotalPages] = useState(null);\r\n    const [totalItems, setTotalItems] = useState(0);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        handlePage().then((products) => {\r\n            console.log(products.length);\r\n            setTotalItems(products.length);\r\n        })\r\n            .catch((error) => {\r\n                console.error('Error occurred while fetching products:', error);\r\n            })\r\n    }, []);\r\n\r\n\r\n    const onPageChanged = (page) => {\r\n        handlePage().then((products) => {\r\n            const {currentPage, totalPages, pageLimit} = page;\r\n            const offset = (currentPage - 1) * pageLimit;\r\n            const currentProducts = products.slice(offset, offset + pageLimit);\r\n\r\n            setCurrentPage(currentPage);\r\n            setCurrentProducts(currentProducts);\r\n            setTotalPages(totalPages);\r\n        })\r\n            .catch((error) => {\r\n                console.error(\"Error occurred while fetching products:\", error);\r\n            });\r\n    };\r\n\r\n    const handlePage = async () => {\r\n        try {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n            const userId = sessionStorage.getItem('userData2');\r\n            console.log(userId);\r\n            const id = userId;\r\n\r\n            if (accessToken && refreshToken) {\r\n                const response = await axios.get(`/auth/board/${id}`, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${accessToken}`,\r\n                        'RefreshToken': `Bearer ${refreshToken}`,\r\n                    },\r\n                });\r\n\r\n                if (response.status == 200) {\r\n                    const data = await response.data.data;\r\n                    console.log(data);\r\n                    return data;\r\n                } else {\r\n                    setLoginError('인증된 유저만 접근 가능합니다.');\r\n                }\r\n            } else {\r\n                setLoginError('로그인이 필요합니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('에러발생..', error);\r\n            setLoginError('에러 발생.');\r\n        }\r\n    };\r\n\r\n    const handlePosting = () => {\r\n        navigate('/editor');\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <header>\r\n                <h1> UserBoard </h1>\r\n            </header>\r\n            <div style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <form action=\"/\" method=\"get\">\r\n                    <input type=\"text\" placeholder=\"Search\" name=\"keyword\"/>\r\n                    <button style={{marginLeft: '0.5em'}}>Search</button>\r\n                </form>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent: 'flex-end', marginTop: '0.5em'}}>\r\n                <form action=\"/\" method=\"get\">\r\n                    <button onClick={handlePosting} style={{marginLeft: '0.5em'}}>글작성</button>\r\n                </form>\r\n            </div>\r\n\r\n            <ListGroup as=\"ol\" numbered={true}>\r\n\r\n                {currentProducts.map((board) => (\r\n                    <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\" key={board.id}>\r\n                        <div className=\"ms-2 me-auto\">\r\n                            <h4 className=\"fw-bold\">{board.title}</h4>\r\n                            <a href={`/detail/${board.id}`}>상세보기</a>\r\n                        </div>\r\n                        <div>\r\n                            <div>작성자 : {board.username}</div>\r\n                        </div>\r\n                        <hr/>\r\n                        {console.log(board.thumbnail)}\r\n                        <Image src={board.thumbnail} style={{height: \"100px\"}} fluid/>\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n\r\n            <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"20px\"}}>\r\n                <Paging\r\n                    totalRecords={totalItems}\r\n                    pageLimit={9}\r\n                    pageNeighbours={3}\r\n                    onPageChanged={onPageChanged}\r\n                    sizing=\"\"\r\n                    alignment=\"justify-content-center\"\r\n                />\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserBoard;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid = false,\n  rounded = false,\n  roundedCircle = false,\n  thumbnail = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nexport default Image;"],"names":["React","useEffect","useState","PropTypes","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","arguments","length","undefined","i","push","Paging","props","_props$totalRecords","totalRecords","_props$pageLimit","pageLimit","_props$pageNeighbours","pageNeighbours","_props$sizing","sizing","_props$alignment","alignment","_props$onPageChanged","onPageChanged","_useState","_useState2","_slicedToArray","currentPage","setCurrentPage","totalPages","Math","ceil","gotoPage","page","validPage","max","min","handleClick","evt","preventDefault","handleMoveLeft","handleMoveRight","fetchPageNumbers","totalNumbers","totalBlocks","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","pagesCount","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","concat","_toConsumableArray","createElement","className","map","index","key","onClick","href","e","propTypes","number","isRequired","func","string","memo","styled","Container","div","_templateObject","_taggedTemplateLiteral","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","apply","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","Array","test","len","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","isArray","useLocation","useNavigate","Pagination","ListGroup","Image","axios","DeliveryCategoryConfig","UserBoard","loginError","setLoginError","_useState3","_useState4","_useState5","_useState6","currentProducts","setCurrentProducts","_useState7","_useState8","setTotalPages","_useState9","_useState10","totalItems","setTotalItems","navigate","handlePage","products","console","log","offset","_ref","_callee","accessToken","refreshToken","userId","id","response","data","_callee$","_context","localStorage","getItem","sessionStorage","get","headers","status","t0","handlePosting","style","display","justifyContent","action","placeholder","marginLeft","marginTop","as","numbered","board","Item","title","username","thumbnail","src","height","fluid"],"sourceRoot":""}